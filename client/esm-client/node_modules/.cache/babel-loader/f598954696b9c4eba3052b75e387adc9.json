{"ast":null,"code":"import { logoutUser } from \"./authActions\";\nexport const FETCH_CLASSES_REQUEST = \"FETCH_CLASSES_REQUEST\";\nexport const FETCH_CLASSES_SUCCESS = \"FETCH_CLASSES_SUCCESS\";\nexport const FETCH_CLASSES_FAILURE = \"FETCH_CLASSES_FAILURE\";\n\nconst requestClasses = () => {\n  return {\n    type: FETCH_CLASSES_REQUEST\n  };\n};\n\nconst receiveClasses = data => {\n  return {\n    type: FETCH_CLASSES_SUCCESS,\n    data\n  };\n};\n\nconst ClassesError = () => {\n  return {\n    type: FETCH_CLASSES_FAILURE\n  };\n};\n\nexport const fetchClasses = values => dispatch => {\n  dispatch(requestClasses());\n  const requestOptions = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"token\")\n    }\n  };\n  fetch(\"/teacher/classes\", requestOptions).then(response => response.json()).then(data => {\n    var _data$error;\n\n    if ((data === null || data === void 0 ? void 0 : (_data$error = data.error) === null || _data$error === void 0 ? void 0 : _data$error.name) === \"TokenExpiredError\") {\n      dispatch(logoutUser());\n    } else {\n      const filteredDupicates = data.obj.filter((v, i, a) => a.findIndex(t => t.className === v.className) === i);\n      dispatch(receiveClasses(filteredDupicates));\n    }\n  }).catch(error => {\n    console.log(error); //Do something with the error if you want!\n\n    dispatch(ClassesError());\n  });\n};","map":{"version":3,"sources":["D:/Final year project/project_repo/EduSync/client/esm-client/src/actions/classesActions.js"],"names":["logoutUser","FETCH_CLASSES_REQUEST","FETCH_CLASSES_SUCCESS","FETCH_CLASSES_FAILURE","requestClasses","type","receiveClasses","data","ClassesError","fetchClasses","values","dispatch","requestOptions","method","headers","Authorization","localStorage","getItem","fetch","then","response","json","error","name","filteredDupicates","obj","filter","v","i","a","findIndex","t","className","catch","console","log"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;;AAEP,MAAMC,cAAc,GAAG,MAAM;AAC3B,SAAO;AACLC,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMK,cAAc,GAAIC,IAAD,IAAU;AAC/B,SAAO;AACLF,IAAAA,IAAI,EAAEH,qBADD;AAELK,IAAAA;AAFK,GAAP;AAID,CALD;;AAOA,MAAMC,YAAY,GAAG,MAAM;AACzB,SAAO;AACLH,IAAAA,IAAI,EAAEF;AADD,GAAP;AAGD,CAJD;;AAMA,OAAO,MAAMM,YAAY,GAAIC,MAAD,IAAaC,QAAD,IAAc;AACpDA,EAAAA,QAAQ,CAACP,cAAc,EAAf,CAAR;AAEA,QAAMQ,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,KADa;AAErBC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAFR;AAFY,GAAvB;AAOAC,EAAAA,KAAK,CAAC,kBAAD,EAAqBN,cAArB,CAAL,CACGO,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESZ,IAAD,IAAU;AAAA;;AACd,QAAI,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,2BAAAA,IAAI,CAAEe,KAAN,4DAAaC,IAAb,MAAsB,mBAA1B,EAA+C;AAC7CZ,MAAAA,QAAQ,CAACX,UAAU,EAAX,CAAR;AACD,KAFD,MAEO;AACL,YAAMwB,iBAAiB,GAAGjB,IAAI,CAACkB,GAAL,CAASC,MAAT,CACxB,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAaA,CAAC,CAACC,SAAF,CAAaC,CAAD,IAAOA,CAAC,CAACC,SAAF,KAAgBL,CAAC,CAACK,SAArC,MAAoDJ,CADzC,CAA1B;AAGAjB,MAAAA,QAAQ,CAACL,cAAc,CAACkB,iBAAD,CAAf,CAAR;AACD;AACF,GAXH,EAYGS,KAZH,CAYUX,KAAD,IAAW;AAChBY,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ,EADgB,CAEhB;;AACAX,IAAAA,QAAQ,CAACH,YAAY,EAAb,CAAR;AACD,GAhBH;AAiBD,CA3BM","sourcesContent":["import { logoutUser } from \"./authActions\";\r\nexport const FETCH_CLASSES_REQUEST = \"FETCH_CLASSES_REQUEST\";\r\nexport const FETCH_CLASSES_SUCCESS = \"FETCH_CLASSES_SUCCESS\";\r\nexport const FETCH_CLASSES_FAILURE = \"FETCH_CLASSES_FAILURE\";\r\n\r\nconst requestClasses = () => {\r\n  return {\r\n    type: FETCH_CLASSES_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveClasses = (data) => {\r\n  return {\r\n    type: FETCH_CLASSES_SUCCESS,\r\n    data,\r\n  };\r\n};\r\n\r\nconst ClassesError = () => {\r\n  return {\r\n    type: FETCH_CLASSES_FAILURE,\r\n  };\r\n};\r\n\r\nexport const fetchClasses = (values) => (dispatch) => {\r\n  dispatch(requestClasses());\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n  };\r\n  fetch(\"/teacher/classes\", requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data?.error?.name === \"TokenExpiredError\") {\r\n        dispatch(logoutUser());\r\n      } else {\r\n        const filteredDupicates = data.obj.filter(\r\n          (v, i, a) => a.findIndex((t) => t.className === v.className) === i\r\n        );\r\n        dispatch(receiveClasses(filteredDupicates));\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      //Do something with the error if you want!\r\n      dispatch(ClassesError());\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}