{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final year project\\\\project_repo\\\\EduSync\\\\client\\\\esm-client\\\\src\\\\result\\\\TestList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"antd\";\nimport SearchBox from \"./SearchBox\";\nimport { useHistory } from \"react-router-dom\";\nimport { Skeleton } from \"antd\";\nexport default function TestList(props) {\n  const history = useHistory();\n  const [tests, setTests] = useState([]);\n  const [searchTests, setSearchTests] = useState([]);\n  const [searching, setSearching] = useState(\"\");\n  useEffect(() => {\n    setTests(props.tests.reverse());\n  }, [props]);\n\n  const handleListData = searchTerm => {\n    if (searchTerm === \"\") setSearching(searchTerm);else {\n      setSearching(true);\n      setSearchTests(tests.filter(test => test.testName.toLowerCase().includes(searchTerm)));\n    }\n  };\n\n  let selectRef,\n      selectedData = {};\n\n  const handleButtonClick = () => {\n    var _selectedData$testNam;\n\n    props.handleSelectedTest(selectedData);\n    history.push(`/result/${(_selectedData$testNam = selectedData.testName) === null || _selectedData$testNam === void 0 ? void 0 : _selectedData$testNam.replace(/\\s+/g, \"-\").toLowerCase()}`);\n  };\n\n  const handleSelectTest = (e, index) => {\n    if (selectRef) {\n      selectRef.classList.remove(\"selected__test\");\n    }\n\n    selectRef = e.currentTarget;\n    e.currentTarget.classList.add(\"selected__test\");\n    selectedData = tests[index]; //console.log();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"select__test__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"test__wrapper__heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Attempted Test\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"select__test__search__box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"search__box__heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Search Test\"), /*#__PURE__*/React.createElement(SearchBox, {\n    handleListData: handleListData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test__wrapper__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"test__wrapper__heading select__heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Select Test\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"select__test__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, tests.length > 0 ? searching !== \"\" ? searchTests.map((test, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `test__wrapper`,\n    onClick: e => {\n      handleSelectTest(e, index);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"select__test\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 23\n    }\n  }, test.testName), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test__time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"time start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, \"Published On: Oct 26 2020 12:14PM\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"time end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, \"Attempted On: Oct 29 2020 11:50PM\")))) : tests.map((test, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `test__wrapper`,\n    onClick: e => {\n      handleSelectTest(e, index);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"select__test\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 23\n    }\n  }, test.testName), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test__time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"time start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, \"Published On: Oct 26 2020 12:14PM\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"time end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, \"Attempted On: Oct 29 2020 11:50PM\")))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"select__skeleton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"select__single-skeleton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Skeleton.Avatar, {\n    className: \"select__avatar-skelton\",\n    active: true,\n    size: \"default\",\n    shape: \"square\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Skeleton.Input, {\n    className: \"select__input-skelton\",\n    active: true,\n    size: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"select__single-skeleton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Skeleton.Avatar, {\n    className: \"select__avatar-skelton\",\n    active: true,\n    size: \"default\",\n    shape: \"square\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Skeleton.Input, {\n    className: \"select__input-skelton\",\n    active: true,\n    size: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"select__single-skeleton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Skeleton.Avatar, {\n    className: \"select__avatar-skelton\",\n    active: true,\n    size: \"default\",\n    shape: \"square\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Skeleton.Input, {\n    className: \"select__input-skelton\",\n    active: true,\n    size: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"select__button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: handleButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, \"Continue\"))));\n}","map":{"version":3,"sources":["D:/Final year project/project_repo/EduSync/client/esm-client/src/result/TestList.js"],"names":["React","useState","useEffect","Button","SearchBox","useHistory","Skeleton","TestList","props","history","tests","setTests","searchTests","setSearchTests","searching","setSearching","reverse","handleListData","searchTerm","filter","test","testName","toLowerCase","includes","selectRef","selectedData","handleButtonClick","handleSelectedTest","push","replace","handleSelectTest","e","index","classList","remove","currentTarget","add","length","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,MAAzB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACH,KAAK,CAACE,KAAN,CAAYM,OAAZ,EAAD,CAAR;AACD,GAFQ,EAEN,CAACR,KAAD,CAFM,CAAT;;AAIA,QAAMS,cAAc,GAAIC,UAAD,IAAgB;AACrC,QAAIA,UAAU,KAAK,EAAnB,EAAuBH,YAAY,CAACG,UAAD,CAAZ,CAAvB,KACK;AACHH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,MAAAA,cAAc,CACZH,KAAK,CAACS,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,QAAL,CAAcC,WAAd,GAA4BC,QAA5B,CAAqCL,UAArC,CAAvB,CADY,CAAd;AAGD;AACF,GARD;;AAUA,MAAIM,SAAJ;AAAA,MACEC,YAAY,GAAG,EADjB;;AAGA,QAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9BlB,IAAAA,KAAK,CAACmB,kBAAN,CAAyBF,YAAzB;AACAhB,IAAAA,OAAO,CAACmB,IAAR,CACG,WAAD,yBAAWH,YAAY,CAACJ,QAAxB,0DAAW,sBAAuBQ,OAAvB,CAA+B,MAA/B,EAAuC,GAAvC,EAA4CP,WAA5C,EAA0D,EADvE;AAGD,GALD;;AAOA,QAAMQ,gBAAgB,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACrC,QAAIR,SAAJ,EAAe;AACbA,MAAAA,SAAS,CAACS,SAAV,CAAoBC,MAApB,CAA2B,gBAA3B;AACD;;AACDV,IAAAA,SAAS,GAAGO,CAAC,CAACI,aAAd;AACAJ,IAAAA,CAAC,CAACI,aAAF,CAAgBF,SAAhB,CAA0BG,GAA1B,CAA8B,gBAA9B;AACAX,IAAAA,YAAY,GAAGf,KAAK,CAACsB,KAAD,CAApB,CANqC,CAOrC;AACD,GARD;;AAUA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEG,oBAAC,SAAD;AAAW,IAAA,cAAc,EAAEf,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,eAGE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,wCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAIE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KAAK,CAAC2B,MAAN,GAAe,CAAf,GACCvB,SAAS,KAAK,EAAd,GACEF,WAAW,CAAC0B,GAAZ,CAAgB,CAAClB,IAAD,EAAOY,KAAP,kBACd;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,SAAS,EAAG,eAFd;AAGE,IAAA,OAAO,EAAGD,CAAD,IAAO;AACdD,MAAAA,gBAAgB,CAACC,CAAD,EAAIC,KAAJ,CAAhB;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAG,IAAA,SAAS,EAAC,cAAb;AAA4B,IAAA,GAAG,EAAEA,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,IAAI,CAACC,QADR,CAPF,eAUE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,eAIE;AAAG,IAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAJF,CAVF,CADF,CADF,GAuBEX,KAAK,CAAC4B,GAAN,CAAU,CAAClB,IAAD,EAAOY,KAAP,kBACR;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,SAAS,EAAG,eAFd;AAGE,IAAA,OAAO,EAAGD,CAAD,IAAO;AACdD,MAAAA,gBAAgB,CAACC,CAAD,EAAIC,KAAJ,CAAhB;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAG,IAAA,SAAS,EAAC,cAAb;AAA4B,IAAA,GAAG,EAAEA,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,IAAI,CAACC,QADR,CAPF,eAUE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,eAIE;AAAG,IAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAJF,CAVF,CADF,CAxBH,gBA+CC;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD,CAAU,MAAV;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,MAAM,EAAE,IAFV;AAGE,IAAA,IAAI,EAAC,SAHP;AAIE,IAAA,KAAK,EAAC,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,QAAD,CAAU,KAAV;AACE,IAAA,SAAS,EAAC,uBADZ;AAEE,IAAA,MAAM,EAAE,IAFV;AAGE,IAAA,IAAI,EAAC,SAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,eAcE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD,CAAU,MAAV;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,MAAM,EAAE,IAFV;AAGE,IAAA,IAAI,EAAC,SAHP;AAIE,IAAA,KAAK,EAAC,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,QAAD,CAAU,KAAV;AACE,IAAA,SAAS,EAAC,uBADZ;AAEE,IAAA,MAAM,EAAE,IAFV;AAGE,IAAA,IAAI,EAAC,SAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAdF,eA2BE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD,CAAU,MAAV;AACE,IAAA,SAAS,EAAC,wBADZ;AAEE,IAAA,MAAM,EAAE,IAFV;AAGE,IAAA,IAAI,EAAC,SAHP;AAIE,IAAA,KAAK,EAAC,QAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,QAAD,CAAU,KAAV;AACE,IAAA,SAAS,EAAC,uBADZ;AAEE,IAAA,MAAM,EAAE,IAFV;AAGE,IAAA,IAAI,EAAC,SAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CA3BF,CAhDJ,CAJF,CAHF,CAFF,eAsGE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEK,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAtGF,CADF,CADF;AAgHD","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"antd\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nexport default function TestList(props) {\r\n  const history = useHistory();\r\n  const [tests, setTests] = useState([]);\r\n  const [searchTests, setSearchTests] = useState([]);\r\n  const [searching, setSearching] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setTests(props.tests.reverse());\r\n  }, [props]);\r\n\r\n  const handleListData = (searchTerm) => {\r\n    if (searchTerm === \"\") setSearching(searchTerm);\r\n    else {\r\n      setSearching(true);\r\n      setSearchTests(\r\n        tests.filter((test) => test.testName.toLowerCase().includes(searchTerm))\r\n      );\r\n    }\r\n  };\r\n\r\n  let selectRef,\r\n    selectedData = {};\r\n\r\n  const handleButtonClick = () => {\r\n    props.handleSelectedTest(selectedData);\r\n    history.push(\r\n      `/result/${selectedData.testName?.replace(/\\s+/g, \"-\").toLowerCase()}`\r\n    );\r\n  };\r\n\r\n  const handleSelectTest = (e, index) => {\r\n    if (selectRef) {\r\n      selectRef.classList.remove(\"selected__test\");\r\n    }\r\n    selectRef = e.currentTarget;\r\n    e.currentTarget.classList.add(\"selected__test\");\r\n    selectedData = tests[index];\r\n    //console.log();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"select__test__wrapper\">\r\n        <p className=\"test__wrapper__heading\">Attempted Test</p>\r\n        <div className=\"select__test__search__box\">\r\n          <p className=\"search__box__heading\">Search Test</p>\r\n          {<SearchBox handleListData={handleListData} />}\r\n          <div className=\"test__wrapper__body\">\r\n            <p className=\"test__wrapper__heading select__heading\">\r\n              Select Test\r\n            </p>\r\n            <div className=\"select__test__body\">\r\n              {tests.length > 0 ? (\r\n                searching !== \"\" ? (\r\n                  searchTests.map((test, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`test__wrapper`}\r\n                      onClick={(e) => {\r\n                        handleSelectTest(e, index);\r\n                      }}\r\n                    >\r\n                      <p className=\"select__test\" key={index}>\r\n                        {test.testName}\r\n                      </p>\r\n                      <div className=\"test__time\">\r\n                        <p className=\"time start\">\r\n                          Published On: Oct 26 2020 12:14PM\r\n                        </p>\r\n                        <p className=\"time end\">\r\n                          Attempted On: Oct 29 2020 11:50PM\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  tests.map((test, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`test__wrapper`}\r\n                      onClick={(e) => {\r\n                        handleSelectTest(e, index);\r\n                      }}\r\n                    >\r\n                      <p className=\"select__test\" key={index}>\r\n                        {test.testName}\r\n                      </p>\r\n                      <div className=\"test__time\">\r\n                        <p className=\"time start\">\r\n                          Published On: Oct 26 2020 12:14PM\r\n                        </p>\r\n                        <p className=\"time end\">\r\n                          Attempted On: Oct 29 2020 11:50PM\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                )\r\n              ) : (\r\n                <div className=\"select__skeleton\">\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"select__single-skeleton\">\r\n                    <Skeleton.Avatar\r\n                      className=\"select__avatar-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                      shape=\"square\"\r\n                    />\r\n                    <Skeleton.Input\r\n                      className=\"select__input-skelton\"\r\n                      active={true}\r\n                      size=\"default\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"select__button\">\r\n          <Button type=\"primary\" onClick={handleButtonClick}>\r\n            Continue\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}