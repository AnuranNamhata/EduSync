{"ast":null,"code":"import { SUBMIT_TEST_REQUEST, SUBMIT_TEST_SUCCESS, SUBMIT_TEST_FAILURE, ASSIGNED_TEST_REQUEST, ASSIGNED_TEST_FAILURE, ASSIGNED_TEST_SUCCESS, SET_TEST_CREATED_FALSE } from \"../actions/TeacherActions\";\nconst initialState = {\n  isFetching: false,\n  isLoadingTest: false,\n  fetchingError: false,\n  isFetched: false,\n  testCreated: false,\n  testSubmitted: false,\n  testSubmitError: false,\n  assignedTests: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SUBMIT_TEST_REQUEST:\n      return {\n        ...state,\n        isFetching: true,\n        isLoadingTest: true,\n        fetchingError: false\n      };\n    case SUBMIT_TEST_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        testCreated: true,\n        isLoadingTest: false,\n        isFetched: true\n      };\n    case SUBMIT_TEST_FAILURE:\n      return {\n        ...state,\n        isFetching: true,\n        isLoadingTest: true,\n        fetchingError: false\n      };\n    case ASSIGNED_TEST_REQUEST:\n      return {\n        ...state,\n        isFetching: true,\n        isLoadingTest: true,\n        fetchingError: false\n      };\n    case ASSIGNED_TEST_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        testCreated: true,\n        isLoadingTest: false,\n        isFetched: true,\n        assignedTests: action.tests\n      };\n    case ASSIGNED_TEST_FAILURE:\n      return {\n        ...state,\n        isFetching: true,\n        isLoadingTest: true,\n        fetchingError: false\n      };\n    case SET_TEST_CREATED_FALSE:\n      return {\n        ...state,\n        testCreated: false\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["SUBMIT_TEST_REQUEST","SUBMIT_TEST_SUCCESS","SUBMIT_TEST_FAILURE","ASSIGNED_TEST_REQUEST","ASSIGNED_TEST_FAILURE","ASSIGNED_TEST_SUCCESS","SET_TEST_CREATED_FALSE","initialState","isFetching","isLoadingTest","fetchingError","isFetched","testCreated","testSubmitted","testSubmitError","assignedTests","state","action","type","tests"],"sources":["D:/Final year project/project_repo/EduSync/client/esm-client/src/reducers/teacherReducer.js"],"sourcesContent":["import {\r\n  SUBMIT_TEST_REQUEST,\r\n  SUBMIT_TEST_SUCCESS,\r\n  SUBMIT_TEST_FAILURE,\r\n  ASSIGNED_TEST_REQUEST,\r\n  ASSIGNED_TEST_FAILURE,\r\n  ASSIGNED_TEST_SUCCESS,\r\n  SET_TEST_CREATED_FALSE,\r\n} from \"../actions/TeacherActions\";\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  isLoadingTest: false,\r\n  fetchingError: false,\r\n  isFetched: false,\r\n  testCreated: false,\r\n  testSubmitted: false,\r\n  testSubmitError: false,\r\n  assignedTests: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SUBMIT_TEST_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        fetchingError: false,\r\n      };\r\n    case SUBMIT_TEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        testCreated: true,\r\n        isLoadingTest: false,\r\n        isFetched: true,\r\n      };\r\n    case SUBMIT_TEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        fetchingError: false,\r\n      };\r\n    case ASSIGNED_TEST_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        fetchingError: false,\r\n      };\r\n    case ASSIGNED_TEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        testCreated: true,\r\n        isLoadingTest: false,\r\n        isFetched: true,\r\n        assignedTests: action.tests,\r\n      };\r\n    case ASSIGNED_TEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        fetchingError: false,\r\n      };\r\n    case SET_TEST_CREATED_FALSE:\r\n      return {\r\n        ...state,\r\n        testCreated: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"],"mappings":"AAAA,SACEA,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,EACnBC,qBAAqB,EACrBC,qBAAqB,EACrBC,qBAAqB,EACrBC,sBAAsB,QACjB,2BAA2B;AAElC,MAAMC,YAAY,GAAG;EACnBC,UAAU,EAAE,KAAK;EACjBC,aAAa,EAAE,KAAK;EACpBC,aAAa,EAAE,KAAK;EACpBC,SAAS,EAAE,KAAK;EAChBC,WAAW,EAAE,KAAK;EAClBC,aAAa,EAAE,KAAK;EACpBC,eAAe,EAAE,KAAK;EACtBC,aAAa,EAAE;AACjB,CAAC;AAED,eAAe,UAAUC,KAAK,GAAGT,YAAY,EAAEU,MAAM,EAAE;EACrD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKlB,mBAAmB;MACtB,OAAO;QACL,GAAGgB,KAAK;QACRR,UAAU,EAAE,IAAI;QAChBC,aAAa,EAAE,IAAI;QACnBC,aAAa,EAAE;MACjB,CAAC;IACH,KAAKT,mBAAmB;MACtB,OAAO;QACL,GAAGe,KAAK;QACRR,UAAU,EAAE,KAAK;QACjBI,WAAW,EAAE,IAAI;QACjBH,aAAa,EAAE,KAAK;QACpBE,SAAS,EAAE;MACb,CAAC;IACH,KAAKT,mBAAmB;MACtB,OAAO;QACL,GAAGc,KAAK;QACRR,UAAU,EAAE,IAAI;QAChBC,aAAa,EAAE,IAAI;QACnBC,aAAa,EAAE;MACjB,CAAC;IACH,KAAKP,qBAAqB;MACxB,OAAO;QACL,GAAGa,KAAK;QACRR,UAAU,EAAE,IAAI;QAChBC,aAAa,EAAE,IAAI;QACnBC,aAAa,EAAE;MACjB,CAAC;IACH,KAAKL,qBAAqB;MACxB,OAAO;QACL,GAAGW,KAAK;QACRR,UAAU,EAAE,KAAK;QACjBI,WAAW,EAAE,IAAI;QACjBH,aAAa,EAAE,KAAK;QACpBE,SAAS,EAAE,IAAI;QACfI,aAAa,EAAEE,MAAM,CAACE;MACxB,CAAC;IACH,KAAKf,qBAAqB;MACxB,OAAO;QACL,GAAGY,KAAK;QACRR,UAAU,EAAE,IAAI;QAChBC,aAAa,EAAE,IAAI;QACnBC,aAAa,EAAE;MACjB,CAAC;IACH,KAAKJ,sBAAsB;MACzB,OAAO;QACL,GAAGU,KAAK;QACRJ,WAAW,EAAE;MACf,CAAC;IAEH;MACE,OAAOI,KAAK;EAChB;AACF"},"metadata":{},"sourceType":"module"}