{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final year project\\\\project_repo\\\\EduSync\\\\client\\\\esm-client\\\\src\\\\testPreview\\\\HandleLiveTest.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateTimeSpentByStudent } from \"../actions/attemptTestActions\";\nimport \"./HandleLiveTest.css\";\nimport LeftSide from \"./LeftSide\";\nimport RightSide from \"./RightSide\";\nimport Footer from \"./Footer\";\nimport { questions } from \"./mockData\";\nimport Counter from \"./Counter\";\n\nclass HandleLiveTest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeActivatedQueFromFooter = changeActivatedQue => {\n      if (changeActivatedQue !== \"flag__question\") {\n        this.setState({\n          footerClick: true\n        });\n        this.child.changeActivatedQueInChild(changeActivatedQue);\n      } else {\n        this.triggerFlag();\n\n        if (this.state.flag <= this.state.questionsData.length) {\n          this.setState({\n            flag: this.state.flag + 1\n          });\n        }\n      }\n    };\n\n    this.handleSubmitTest = () => {\n      this.child.submitTest();\n    };\n\n    this.changeParentActivatedQue = index => {\n      this.setState({\n        activateQue: index,\n        footerClick: true\n      });\n    };\n\n    this.submitTestOnCounterEnd = () => {\n      this.handleSubmitTest();\n    };\n\n    this.handleFooterButtons = buttonClicked => {\n      this.changeActivatedQueFromFooter(buttonClicked);\n    };\n\n    this.handleClearResponse = (index, blankClearAttempt) => {\n      if (!blankClearAttempt) {\n        let updatedUserAnswers = this.state.userAnswers;\n        updatedUserAnswers[index] = undefined;\n        this.setState({\n          totalAnswered: this.state.totalAnswered - 1,\n          totalPending: this.state.totalPending + 1,\n          userAnswers: updatedUserAnswers,\n          activateQue: index,\n          footerClick: false,\n          answered: false\n        });\n      }\n    };\n\n    this.questionAnswered = (index, option, changed) => {\n      if (!changed) {\n        let updatedUserAnswers = this.state.userAnswers;\n        updatedUserAnswers[index] = option;\n        this.setState({\n          totalAnswered: this.state.totalAnswered + 1,\n          totalPending: this.state.totalPending - 1,\n          userAnswers: updatedUserAnswers,\n          activateQue: index,\n          footerClick: false,\n          answered: true\n        });\n      } else {\n        // answers array\n        let updatedUserAnswers = this.state.userAnswers;\n        updatedUserAnswers[index] = option;\n        this.setState({\n          userAnswers: updatedUserAnswers,\n          activateQue: index,\n          footerClick: false,\n          answered: true\n        });\n      }\n    };\n\n    this.handleQuestionClick = index => {\n      this.child.changeActivatedQueInChild(index);\n    };\n\n    this.state = {\n      testID: undefined,\n      totalMinutes: undefined,\n      questionsData: [],\n      answers: [],\n      totalScore: 0,\n      footerClick: false,\n      activateQue: 0,\n      totalAnswered: 0,\n      answered: false,\n      totalPending: null,\n      totalFlagged: 0,\n      questionIndex: 0,\n      flag: 0,\n      testName: null,\n      userAnswers: Array.apply(undefined, Array(5))\n    };\n  }\n\n  componentDidMount() {\n    //  const answers = question\n    // make a call using redux\n    this.props.counterEnd(this.submitTestOnCounterEnd);\n    this.setState({\n      questionsData: this.props.selectedTest.questions,\n      // questionsData:questions,\n      answers: this.props.selectedTest.answers,\n      testID: this.props.testID,\n      testName: this.props.selectedTest.testName,\n      totalPending: this.props.selectedTest.questions.length\n    }); // fire function given by redux\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question_board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"left__side\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"test__info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"test__name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, \"TestName: \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 27\n      }\n    }, this.props.testName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"total__minutes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, \"Total Minutes:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, this.props.totalMinutes))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"questions__status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"total__answered box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"count__answered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, this.state.totalAnswered, \" \"), \"Answered\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"total__flagged box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"count__flagged\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, this.state.flag, \" \"), \"Flagged\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"total__pending box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"count__pending\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, this.state.totalPending, \" \"), \"Pending\")), /*#__PURE__*/React.createElement(LeftSide, {\n      questionsData: this.state.questionsData,\n      handleQuestionClick: this.handleQuestionClick,\n      activateQue: this.state.activateQue,\n      answered: this.state.answered,\n      footerClick: this.state.footerClick,\n      onRef: ref => this.child = ref,\n      flagClicked: click => this.triggerFlag = click,\n      flag: this.state.flag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(RightSide, {\n      questionsData: this.state.questionsData,\n      questionAnswered: this.questionAnswered,\n      questionIndex: this.state.questionIndex,\n      handleClearResponse: this.handleClearResponse,\n      onRef: ref => this.child = ref,\n      changeParentActivatedQue: this.changeParentActivatedQue,\n      userAnswers: this.state.userAnswers,\n      answers: this.state.answers,\n      testID: this.state.testID,\n      testName: this.state.testName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Footer, {\n      handleFooterButtons: this.handleFooterButtons,\n      handleSubmitTest: this.handleSubmitTest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedTest: state.selectedTest.selectedTestData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateTimer: data => dispatch(updateTimeSpentByStudent(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HandleLiveTest);","map":{"version":3,"sources":["D:/Final year project/project_repo/EduSync/client/esm-client/src/testPreview/HandleLiveTest.js"],"names":["React","Component","connect","updateTimeSpentByStudent","LeftSide","RightSide","Footer","questions","Counter","HandleLiveTest","constructor","props","changeActivatedQueFromFooter","changeActivatedQue","setState","footerClick","child","changeActivatedQueInChild","triggerFlag","state","flag","questionsData","length","handleSubmitTest","submitTest","changeParentActivatedQue","index","activateQue","submitTestOnCounterEnd","handleFooterButtons","buttonClicked","handleClearResponse","blankClearAttempt","updatedUserAnswers","userAnswers","undefined","totalAnswered","totalPending","answered","questionAnswered","option","changed","handleQuestionClick","testID","totalMinutes","answers","totalScore","totalFlagged","questionIndex","testName","Array","apply","componentDidMount","counterEnd","selectedTest","render","ref","click","mapStateToProps","selectedTestData","mapDispatchToProps","dispatch","updateTimer","data"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateTimeSpentByStudent } from \"../actions/attemptTestActions\";\r\nimport \"./HandleLiveTest.css\";\r\nimport LeftSide from \"./LeftSide\";\r\nimport RightSide from \"./RightSide\";\r\nimport Footer from \"./Footer\";\r\nimport { questions } from \"./mockData\";\r\nimport Counter from \"./Counter\";\r\n\r\nclass HandleLiveTest extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      testID: undefined,\r\n      totalMinutes: undefined,\r\n      questionsData: [],\r\n      answers: [],\r\n      totalScore: 0,\r\n      footerClick: false,\r\n      activateQue: 0,\r\n      totalAnswered: 0,\r\n      answered: false,\r\n      totalPending: null,\r\n      totalFlagged: 0,\r\n      questionIndex: 0,\r\n      flag: 0,\r\n      testName: null,\r\n      userAnswers: Array.apply(undefined, Array(5)),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //  const answers = question\r\n    // make a call using redux\r\n    this.props.counterEnd(this.submitTestOnCounterEnd);\r\n\r\n    this.setState({\r\n      questionsData: this.props.selectedTest.questions,\r\n      // questionsData:questions,\r\n      answers: this.props.selectedTest.answers,\r\n      testID: this.props.testID,\r\n      testName: this.props.selectedTest.testName,\r\n      totalPending: this.props.selectedTest.questions.length,\r\n    });\r\n    // fire function given by redux\r\n  }\r\n\r\n  changeActivatedQueFromFooter = (changeActivatedQue) => {\r\n    if (changeActivatedQue !== \"flag__question\") {\r\n      this.setState({\r\n        footerClick: true,\r\n      });\r\n      this.child.changeActivatedQueInChild(changeActivatedQue);\r\n    } else {\r\n      this.triggerFlag();\r\n      if (this.state.flag <= this.state.questionsData.length) {\r\n        this.setState({\r\n          flag: this.state.flag + 1,\r\n        });\r\n      }\r\n    }\r\n  };\r\n  handleSubmitTest = () => {\r\n    this.child.submitTest();\r\n  };\r\n  changeParentActivatedQue = (index) => {\r\n    this.setState({\r\n      activateQue: index,\r\n      footerClick: true,\r\n    });\r\n  };\r\n  submitTestOnCounterEnd = () => {\r\n    this.handleSubmitTest();\r\n  };\r\n\r\n  handleFooterButtons = (buttonClicked) => {\r\n    this.changeActivatedQueFromFooter(buttonClicked);\r\n  };\r\n\r\n  handleClearResponse = (index, blankClearAttempt) => {\r\n    if (!blankClearAttempt) {\r\n      let updatedUserAnswers = this.state.userAnswers;\r\n      updatedUserAnswers[index] = undefined;\r\n      this.setState({\r\n        totalAnswered: this.state.totalAnswered - 1,\r\n        totalPending: this.state.totalPending + 1,\r\n        userAnswers: updatedUserAnswers,\r\n        activateQue: index,\r\n        footerClick: false,\r\n        answered: false,\r\n      });\r\n    }\r\n  };\r\n  questionAnswered = (index, option, changed) => {\r\n    if (!changed) {\r\n      let updatedUserAnswers = this.state.userAnswers;\r\n      updatedUserAnswers[index] = option;\r\n      this.setState({\r\n        totalAnswered: this.state.totalAnswered + 1,\r\n        totalPending: this.state.totalPending - 1,\r\n        userAnswers: updatedUserAnswers,\r\n        activateQue: index,\r\n        footerClick: false,\r\n        answered: true,\r\n      });\r\n    } else {\r\n      // answers array\r\n      let updatedUserAnswers = this.state.userAnswers;\r\n      updatedUserAnswers[index] = option;\r\n      this.setState({\r\n        userAnswers: updatedUserAnswers,\r\n        activateQue: index,\r\n        footerClick: false,\r\n        answered: true,\r\n      });\r\n    }\r\n  };\r\n  handleQuestionClick = (index) => {\r\n    this.child.changeActivatedQueInChild(index);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"question_board\">\r\n          <div className=\"left__side\">\r\n            <div className=\"test__info\">\r\n              <div className=\"username\"></div>\r\n              <div className=\"test__name\">\r\n                TestName: <span className=\"danger\">{this.props.testName}</span>\r\n              </div>\r\n              <div className=\"total__minutes\">\r\n                Total Minutes:{\" \"}\r\n                <span className=\"danger\">{this.props.totalMinutes}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"questions__status\">\r\n              <div className=\"total__answered box\">\r\n                <span className=\"count__answered\">\r\n                  {this.state.totalAnswered}{\" \"}\r\n                </span>\r\n                Answered\r\n              </div>\r\n              <div className=\"total__flagged box\">\r\n                <span className=\"count__flagged\">{this.state.flag} </span>\r\n                Flagged\r\n              </div>\r\n              <div className=\"total__pending box\">\r\n                <span className=\"count__pending\">\r\n                  {this.state.totalPending}{\" \"}\r\n                </span>\r\n                Pending\r\n              </div>\r\n            </div>\r\n            <LeftSide\r\n              questionsData={this.state.questionsData}\r\n              handleQuestionClick={this.handleQuestionClick}\r\n              activateQue={this.state.activateQue}\r\n              answered={this.state.answered}\r\n              footerClick={this.state.footerClick}\r\n              onRef={(ref) => (this.child = ref)}\r\n              flagClicked={(click) => (this.triggerFlag = click)}\r\n              flag={this.state.flag}\r\n            />\r\n          </div>\r\n          <RightSide\r\n            questionsData={this.state.questionsData}\r\n            questionAnswered={this.questionAnswered}\r\n            questionIndex={this.state.questionIndex}\r\n            handleClearResponse={this.handleClearResponse}\r\n            onRef={(ref) => (this.child = ref)}\r\n            changeParentActivatedQue={this.changeParentActivatedQue}\r\n            userAnswers={this.state.userAnswers}\r\n            answers={this.state.answers}\r\n            testID={this.state.testID}\r\n            testName={this.state.testName}\r\n          />\r\n          <div className=\"footer\">\r\n            <Footer\r\n              handleFooterButtons={this.handleFooterButtons}\r\n              handleSubmitTest={this.handleSubmitTest}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestData,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateTimer: (data) => dispatch(updateTimeSpentByStudent(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HandleLiveTest);\r\n"]},"metadata":{},"sourceType":"module"}