{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final year project\\\\project_repo\\\\EduSync\\\\client\\\\esm-client\\\\src\\\\Teacher\\\\Dashboard\\\\Classes.js\";\nimport React, { useEffect } from \"react\";\nimport \"./index.css\";\nimport { Link } from \"react-router-dom\";\nimport { HiOutlineClipboardList, HiClipboardCopy } from \"react-icons/hi\";\nimport { fetchClasses } from \"../../actions/classesActions\";\nimport { connect } from \"react-redux\";\nimport { Skeleton } from \"antd\";\nfunction Classes(props) {\n  let {\n    classesList,\n    isLoading,\n    studentClassName,\n    trimLength,\n    classes\n  } = props;\n  if (classesList) classesList = classesList.length > trimLength ? classesList.slice(-trimLength).reverse() : classesList;\n  useEffect(() => {\n    props.fetchClasses();\n  }, []);\n  console.log(props);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left__header red__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"left__header__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HiOutlineClipboardList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }\n  }), \"Recent Registered Classes\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, !isLoading && classesList ? /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"left__body__list__ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, classesList.map((individualClass, index) => /*#__PURE__*/React.createElement(Link, {\n    to: \"/attempt-test\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"left__body__test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test__index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"index__box red__index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, index + 1)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test__name \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }\n  }, \" \", \"Class - \", individualClass.className), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test__icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(HiClipboardCopy, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  })))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"skeleton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, Array(trimLength).fill().map((item, i) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"single-skeleton\",\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Skeleton.Avatar, {\n    className: \"avatar-skelton\",\n    active: true,\n    size: \"default\",\n    shape: \"square\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Skeleton.Input, {\n    className: \"input-skelton\",\n    active: true,\n    size: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  }))))));\n}\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.tests.isLoadingTest,\n    tests: state.tests.test,\n    classesList: state.classesData.classes\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchClasses: () => dispatch(fetchClasses())\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Classes);","map":{"version":3,"names":["React","useEffect","Link","HiOutlineClipboardList","HiClipboardCopy","fetchClasses","connect","Skeleton","Classes","props","classesList","isLoading","studentClassName","trimLength","classes","length","slice","reverse","console","log","createElement","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","individualClass","index","to","key","Array","fill","item","i","Avatar","active","size","shape","Input","mapStateToProps","state","tests","isLoadingTest","test","classesData","mapDispatchToProps","dispatch"],"sources":["D:/Final year project/project_repo/EduSync/client/esm-client/src/Teacher/Dashboard/Classes.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./index.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HiOutlineClipboardList, HiClipboardCopy } from \"react-icons/hi\";\r\nimport { fetchClasses } from \"../../actions/classesActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nfunction Classes(props) {\r\n  let { classesList, isLoading, studentClassName, trimLength, classes } = props;\r\n  if (classesList)\r\n    classesList =\r\n      classesList.length > trimLength\r\n        ? classesList.slice(-trimLength).reverse()\r\n        : classesList;\r\n\r\n  useEffect(() => {\r\n    props.fetchClasses();\r\n  }, []);\r\n  console.log(props);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"left__header red__header\">\r\n        <p className=\"left__header__text\">\r\n          {<HiOutlineClipboardList />}Recent Registered Classes\r\n        </p>\r\n      </div>\r\n      <div className=\"left__body\">\r\n        {!isLoading && classesList ? (\r\n          <ul className=\"left__body__list__ul\">\r\n            {classesList.map((individualClass, index) => (\r\n              <Link to=\"/attempt-test\" key={index}>\r\n                <li className=\"left__body__test\">\r\n                  <div className=\"test__index\">\r\n                    <p className=\"index__box red__index\">{index + 1}</p>\r\n                  </div>\r\n                  <div className=\"test__name \">\r\n                    {\" \"}\r\n                    Class - {individualClass.className}\r\n                  </div>\r\n                  <div className=\"test__icon\">\r\n                    <HiClipboardCopy />\r\n                  </div>\r\n                </li>\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <div className=\"skeleton\">\r\n            {Array(trimLength)\r\n              .fill()\r\n              .map((item, i) => (\r\n                <div className=\"single-skeleton\" key={i}>\r\n                  <Skeleton.Avatar\r\n                    className=\"avatar-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                    shape=\"square\"\r\n                  />\r\n                  <Skeleton.Input\r\n                    className=\"input-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                  />\r\n                </div>\r\n              ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.tests.isLoadingTest,\r\n    tests: state.tests.test,\r\n    classesList: state.classesData.classes,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchClasses: () => dispatch(fetchClasses()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Classes);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}