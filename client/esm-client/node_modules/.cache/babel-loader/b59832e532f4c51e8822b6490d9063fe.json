{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final year project\\\\project_repo\\\\EduSync\\\\client\\\\esm-client\\\\src\\\\Teacher\\\\CreateTest\\\\CreateTest.js\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Form, Input, Button, Select, notification } from \"antd\";\nimport \"./index.css\";\nimport { connect } from \"react-redux\";\nimport Rules from \"./Rules\";\nimport Questions from \"./Questions\";\nimport RenderData from \"./RenderData\";\nimport { submitTest, testCreatedFalse } from \"../../actions/TeacherActions\";\n\nclass CreateTest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submitForm = values => {\n      let questions = [];\n      let answers = [];\n      console.log(values);\n      const {\n        testName,\n        category,\n        className,\n        section,\n        minutes,\n        outOfMarks\n      } = values;\n      questions = this.state.questions.map((question, index) => {\n        return {\n          description: question.questionDescripiton,\n          options: [{\n            option: question.opiton1\n          }, {\n            option: question.opiton2\n          }, {\n            option: question.opiton3\n          }, {\n            option: question.opiton4\n          }]\n        };\n      });\n      this.state.questions.map((question, index) => {\n        answers.push(parseInt(question.answer));\n      });\n      const teacherId = this.props.teacherID;\n      const rules = this.state.rules;\n      const sendData = {\n        teacherId,\n        testName,\n        category,\n        className,\n        section,\n        rules,\n        testCreated: false,\n        minutes,\n        outOfMarks,\n        questions,\n        answers\n      };\n      this.props.submitTest(sendData);\n    };\n\n    this.onFinishFailed = errorInfo => {\n      console.log(\"Failed:\", errorInfo);\n    };\n\n    this.handleSelect = (select, optionData) => {};\n\n    this.handleDeleteRule = Removeindex => {\n      this.setState({\n        rules: this.state.rules.filter((item, index) => index !== Removeindex)\n      });\n    };\n\n    this.handleDeleteQuestion = Removeindex => {\n      this.setState({\n        questions: this.state.questions.filter((item, index) => index !== Removeindex)\n      });\n    };\n\n    this.addRule = value => {\n      this.setState({\n        rules: [...this.state.rules, {\n          value\n        }]\n      });\n    };\n\n    this.openNotification = () => {\n      const args = {\n        message: \"Test Created\",\n        description: \"Congratulations, Your Test created successfully.\",\n        duration: 3\n      };\n      notification.open(args);\n    };\n\n    this.addQuestion = ({\n      questionDescripiton,\n      opiton1,\n      opiton2,\n      opiton3,\n      opiton4,\n      answer\n    }) => {\n      this.setState({\n        questions: [...this.state.questions, {\n          questionDescripiton,\n          opiton1,\n          opiton2,\n          opiton3,\n          opiton4,\n          answer\n        }]\n      });\n    };\n\n    this.state = {\n      rules: [],\n      questions: [],\n      isLoading: false,\n      testCreated: false\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      isLoading: props.isLoading,\n      testCreated: props.testCreated\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.props.testCreated) {\n      this.props.testCreatedFalse();\n      this.openNotification();\n    }\n  }\n\n  render() {\n    const {\n      Option\n    } = Select;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      justify: \"center\",\n      align: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 22,\n      sm: 22,\n      md: 10,\n      lg: 10,\n      className: \"signup__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"sub-title__signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, \" \\uD83C\\uDF93 Create Test\"), /*#__PURE__*/React.createElement(Form, {\n      name: \"basic\",\n      className: \"create__test__form\",\n      initialValues: {\n        remember: true\n      },\n      onFinish: this.submitForm,\n      onFinishFailed: this.onFinishFailed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"element__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"testName\",\n      rules: [{\n        required: true,\n        message: \"Please Enter Test Name!\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Test Name\",\n      className: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"outOfMarks\",\n      rules: [{\n        required: true,\n        message: \"Please enter total marks!\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Total Marks\",\n      className: \"input\",\n      type: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"category\",\n      rules: [{\n        required: true,\n        message: \"Please enter a category\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Catergory of Test\",\n      className: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"minutes\",\n      rules: [{\n        required: true,\n        message: \"Please enter total duration of test\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Duration of test ( in Minutes )\",\n      className: \"input\",\n      type: \"number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"element__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"section\",\n      rules: [{\n        required: true,\n        message: \"Please input your section!\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      defaultValue: \"Section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      value: \"A\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }\n    }, \"A\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"B\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }, \"B\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }\n    }, \"C\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"D\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }\n    }, \"D\"))), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"className\",\n      rules: [{\n        required: true,\n        message: \"Please select a class\"\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      defaultValue: \"Class\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      value: \"IX\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }\n    }, \"IX\")))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"primary-wihtoutFont\",\n      style: {\n        fontWeight: \"500\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 15\n      }\n    }, \" \", \"Test Rules\"), /*#__PURE__*/React.createElement(RenderData, {\n      ruleData: this.state.rules,\n      rules: true,\n      clickedRule: this.handleDeleteRule,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Rules, {\n      addRule: this.addRule,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"primary-wihtoutFont\",\n      style: {\n        fontWeight: \"500\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 15\n      }\n    }, \" \", \"Test Questions\"), /*#__PURE__*/React.createElement(RenderData, {\n      questionData: this.state.questions,\n      questions: true,\n      clickedRule: this.handleDeleteQuestion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Questions, {\n      addQuestion: this.addQuestion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      loading: this.state.isLoading,\n      className: \"sign__up\",\n      htmlType: \"submit\",\n      disabled: this.state.questions.length < 1 ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }\n    }, this.state.isLoading ? \"Creating Test\" : \"Create Test\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    teacherID: state.auth.profileID,\n    isLoading: state.teacher.isLoadingTest,\n    testCreated: state.teacher.testCreated\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submitTest: values => dispatch(submitTest(values)),\n    testCreatedFalse: () => dispatch(testCreatedFalse())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTest);","map":{"version":3,"sources":["D:/Final year project/project_repo/EduSync/client/esm-client/src/Teacher/CreateTest/CreateTest.js"],"names":["React","Component","Row","Col","Form","Input","Button","Select","notification","connect","Rules","Questions","RenderData","submitTest","testCreatedFalse","CreateTest","constructor","props","submitForm","values","questions","answers","console","log","testName","category","className","section","minutes","outOfMarks","state","map","question","index","description","questionDescripiton","options","option","opiton1","opiton2","opiton3","opiton4","push","parseInt","answer","teacherId","teacherID","rules","sendData","testCreated","onFinishFailed","errorInfo","handleSelect","select","optionData","handleDeleteRule","Removeindex","setState","filter","item","handleDeleteQuestion","addRule","value","openNotification","args","message","duration","open","addQuestion","isLoading","getDerivedStateFromProps","componentDidUpdate","render","Option","remember","required","fontWeight","length","mapStateToProps","auth","profileID","teacher","isLoadingTest","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Col, Form, Input, Button, Select, notification } from \"antd\";\r\nimport \"./index.css\";\r\nimport { connect } from \"react-redux\";\r\nimport Rules from \"./Rules\";\r\nimport Questions from \"./Questions\";\r\nimport RenderData from \"./RenderData\";\r\nimport { submitTest, testCreatedFalse } from \"../../actions/TeacherActions\";\r\n\r\nclass CreateTest extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      rules: [],\r\n      questions: [],\r\n      isLoading: false,\r\n      testCreated: false,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {\r\n      isLoading: props.isLoading,\r\n      testCreated: props.testCreated,\r\n    };\r\n  }\r\n\r\n  submitForm = (values) => {\r\n    let questions = [];\r\n    let answers = [];\r\n    console.log(values);\r\n\r\n    const {\r\n      testName,\r\n      category,\r\n      className,\r\n      section,\r\n      minutes,\r\n      outOfMarks,\r\n    } = values;\r\n\r\n\r\n    questions = this.state.questions.map((question, index) => {\r\n      return {\r\n        description: question.questionDescripiton,\r\n        options: [\r\n          {\r\n            option: question.opiton1,\r\n          },\r\n          {\r\n            option: question.opiton2,\r\n          },\r\n          {\r\n            option: question.opiton3,\r\n          },\r\n          {\r\n            option: question.opiton4,\r\n          },\r\n        ],\r\n      };\r\n    });\r\n    this.state.questions.map((question, index) => {\r\n      answers.push(parseInt(question.answer));\r\n    });\r\n    const teacherId = this.props.teacherID;\r\n    const rules = this.state.rules;\r\n\r\n    const sendData = {\r\n      teacherId,\r\n      testName,\r\n      category,\r\n      className,\r\n      section,\r\n      rules,\r\n      testCreated: false,\r\n      minutes,\r\n      outOfMarks,\r\n      questions,\r\n      answers,\r\n    };\r\n\r\n    this.props.submitTest(sendData);\r\n  };\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  handleSelect = (select, optionData) => {};\r\n\r\n  handleDeleteRule = (Removeindex) => {\r\n    \r\n    this.setState({\r\n      rules: this.state.rules.filter((item, index) => index !== Removeindex),\r\n    });\r\n  };\r\n  handleDeleteQuestion = (Removeindex) => {\r\n  \r\n    this.setState({\r\n      questions: this.state.questions.filter((item, index) => index !== Removeindex),\r\n    });\r\n  };\r\n  addRule = (value) => {\r\n    this.setState({\r\n      rules: [...this.state.rules, { value }],\r\n    });\r\n  };\r\n\r\n\r\n  openNotification = () => {\r\n    const args = {\r\n      message: \"Test Created\",\r\n      description: \"Congratulations, Your Test created successfully.\",\r\n      duration: 3,\r\n    };\r\n    notification.open(args);\r\n  };\r\n\r\n  addQuestion = ({\r\n    questionDescripiton,\r\n    opiton1,\r\n    opiton2,\r\n    opiton3,\r\n    opiton4,\r\n    answer,\r\n  }) => {\r\n    this.setState({\r\n      questions: [\r\n        ...this.state.questions,\r\n        { questionDescripiton, opiton1, opiton2, opiton3, opiton4, answer },\r\n      ],\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(){\r\n    if (this.props.testCreated) {\r\n      this.props.testCreatedFalse()\r\n      this.openNotification();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { Option } = Select;\r\n\r\n    return (\r\n      <>\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <Col xs={22} sm={22} md={10} lg={10} className=\"signup__container\">\r\n            <p className=\"sub-title__signup\"> 🎓 Create Test</p>\r\n            <Form\r\n              name=\"basic\"\r\n              className=\"create__test__form\"\r\n              initialValues={{\r\n                remember: true,\r\n              }}\r\n              onFinish={this.submitForm}\r\n              onFinishFailed={this.onFinishFailed}\r\n            >\r\n              <div className=\"element__wrapper\">\r\n                <Form.Item\r\n                  name=\"testName\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please Enter Test Name!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input placeholder=\"Test Name\" className=\"input\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  name=\"outOfMarks\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Please enter total marks!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    placeholder=\"Total Marks\"\r\n                    className=\"input\"\r\n                    type=\"number\"\r\n                  />\r\n                </Form.Item>\r\n              </div>\r\n              <Form.Item\r\n                name=\"category\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please enter a category\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Catergory of Test\" className=\"input\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"minutes\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please enter total duration of test\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  placeholder=\"Duration of test ( in Minutes )\"\r\n                  className=\"input\"\r\n                  type=\"number\"\r\n                />\r\n              </Form.Item>\r\n\r\n              <div className=\"element__wrapper\">\r\n                <Form.Item\r\n                  name=\"section\"\r\n                  rules={[\r\n                    { required: true, message: \"Please input your section!\" },\r\n                  ]}\r\n                >\r\n                  <Select defaultValue=\"Section\">\r\n                    <Option value=\"A\">A</Option>\r\n                    <Option value=\"B\">B</Option>\r\n                    <Option value=\"C\">C</Option>\r\n                    <Option value=\"D\">D</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"className\"\r\n                  rules={[{ required: true, message: \"Please select a class\" }]}\r\n                >\r\n                  <Select defaultValue=\"Class\">\r\n                    <Option value=\"IX\">IX</Option>\r\n                    {/* <Option value=\"XI\">XI</Option>\r\n                    <Option value=\"XII\">XII</Option> */}\r\n                  </Select>\r\n                </Form.Item>\r\n              </div>\r\n              <p className=\"primary-wihtoutFont\" style={{ fontWeight: \"500\" }}>\r\n                {\" \"}\r\n                Test Rules\r\n              </p>\r\n              <RenderData\r\n                ruleData={this.state.rules}\r\n                rules={true}\r\n                clickedRule={this.handleDeleteRule}\r\n              />\r\n              <Form.Item>\r\n                <Rules addRule={this.addRule} />\r\n              </Form.Item>\r\n              <p className=\"primary-wihtoutFont\" style={{ fontWeight: \"500\" }}>\r\n                {\" \"}\r\n                Test Questions\r\n              </p>\r\n              <RenderData\r\n                questionData={this.state.questions}\r\n                questions={true}\r\n                clickedRule={this.handleDeleteQuestion}\r\n              />\r\n              <Form.Item>\r\n                <Questions addQuestion={this.addQuestion} />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"primary\"\r\n                  loading={this.state.isLoading}\r\n                  className=\"sign__up\"\r\n                  htmlType=\"submit\"\r\n                  disabled={(this.state.questions.length<1)?(true):(false)}\r\n                >\r\n                  {this.state.isLoading ? \"Creating Test\" : \"Create Test\"}\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    teacherID: state.auth.profileID,\r\n    isLoading: state.teacher.isLoadingTest,\r\n    testCreated: state.teacher.testCreated,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    submitTest: (values) => dispatch(submitTest(values)),\r\n    testCreatedFalse: () => dispatch(testCreatedFalse()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTest);\r\n"]},"metadata":{},"sourceType":"module"}