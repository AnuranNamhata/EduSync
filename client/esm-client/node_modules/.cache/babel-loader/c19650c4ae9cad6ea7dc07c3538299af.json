{"ast":null,"code":"import { UPDATE_ATTEMPT_TEST_REQUEST, UPDATE_ATTEMPT_TEST_SUCCESS, UPDATE_ATTEMPT_TEST_FAILURE } from \"../actions/attemptTestActions\";\nconst initialState = {\n  attemptedTime: 0,\n  isFetching: false,\n  isFetched: false,\n  isFetchingError: false,\n  initializeTimer: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_ATTEMPT_TEST_REQUEST:\n      // console.log(\"login success fired\", action.obj)\n      return { ...state,\n        isFetching: true\n      };\n\n    case UPDATE_ATTEMPT_TEST_SUCCESS:\n      // console.log(\"login success fired\", action.obj)\n      //console.log(action.data);\n      const checker = state.initializeTimer;\n      return { ...state,\n        isFetched: true,\n        isFetching: false,\n        attemptedTime: action.time,\n        initializeTimer: true\n      };\n\n    case UPDATE_ATTEMPT_TEST_FAILURE:\n      // console.log(\"login success fired\", action.obj)\n      return { ...state,\n        isFetching: false,\n        isFetched: false,\n        isFetchingError: true\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/Final year project/project_repo/EduSync/client/esm-client/src/reducers/attemptedTestReducer.js"],"names":["UPDATE_ATTEMPT_TEST_REQUEST","UPDATE_ATTEMPT_TEST_SUCCESS","UPDATE_ATTEMPT_TEST_FAILURE","initialState","attemptedTime","isFetching","isFetched","isFetchingError","initializeTimer","state","action","type","checker","time"],"mappings":"AAAA,SACEA,2BADF,EAEEC,2BAFF,EAGEC,2BAHF,QAIO,+BAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,CADI;AAEnBC,EAAAA,UAAU,EAAE,KAFO;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,eAAe,EAAE,KAJE;AAKnBC,EAAAA,eAAe,EAAE;AALE,CAArB;AAQA,eAAe,UAAUC,KAAK,GAAGN,YAAlB,EAAgCO,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,2BAAL;AACE;AACA,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAKF,SAAKJ,2BAAL;AACE;AACA;AACA,YAAMW,OAAO,GAAGH,KAAK,CAACD,eAAtB;AACA,aAAO,EACL,GAAGC,KADE;AAELH,QAAAA,SAAS,EAAE,IAFN;AAGLD,QAAAA,UAAU,EAAE,KAHP;AAILD,QAAAA,aAAa,EAAEM,MAAM,CAACG,IAJjB;AAKLL,QAAAA,eAAe,EAAE;AALZ,OAAP;;AAOF,SAAKN,2BAAL;AACE;AACA,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,SAAS,EAAE,KAHN;AAILC,QAAAA,eAAe,EAAE;AAJZ,OAAP;;AAOF;AACE,aAAOE,KAAP;AA7BJ;AA+BD","sourcesContent":["import {\r\n  UPDATE_ATTEMPT_TEST_REQUEST,\r\n  UPDATE_ATTEMPT_TEST_SUCCESS,\r\n  UPDATE_ATTEMPT_TEST_FAILURE,\r\n} from \"../actions/attemptTestActions\";\r\n\r\nconst initialState = {\r\n  attemptedTime: 0,\r\n  isFetching: false,\r\n  isFetched: false,\r\n  isFetchingError: false,\r\n  initializeTimer: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_ATTEMPT_TEST_REQUEST:\r\n      // console.log(\"login success fired\", action.obj)\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n      };\r\n\r\n    case UPDATE_ATTEMPT_TEST_SUCCESS:\r\n      // console.log(\"login success fired\", action.obj)\r\n      //console.log(action.data);\r\n      const checker = state.initializeTimer;\r\n      return {\r\n        ...state,\r\n        isFetched: true,\r\n        isFetching: false,\r\n        attemptedTime: action.time,\r\n        initializeTimer: true,\r\n      };\r\n    case UPDATE_ATTEMPT_TEST_FAILURE:\r\n      // console.log(\"login success fired\", action.obj)\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        isFetched: false,\r\n        isFetchingError: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}