{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final year project\\\\project_repo\\\\EduSync\\\\client\\\\esm-client\\\\src\\\\testPreview\\\\LeftSide.js\";\nimport React, { Component } from \"react\";\nexport default class LeftSide extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeBg = (activatedQue, answered, footerClicked) => {\n      if (this.state.selectRef) {\n        this.state.selectRef.classList.remove(\"selected\");\n\n        if (answered == false) {\n          this.state.selectRef.classList.remove(\"answered\");\n        }\n      }\n\n      if (this.accordionContent[activatedQue]) this.accordionContent[activatedQue].classList.add(\"selected\");\n\n      if (answered && footerClicked == false) {\n        this.accordionContent[activatedQue].classList.add(\"answered\");\n      }\n\n      this.setState({\n        selectRef: this.accordionContent[activatedQue]\n      });\n    };\n\n    this.flagQuestion = () => {\n      this.state.selectRef.classList.add(\"flagged\");\n    };\n\n    this.setFlag = () => {\n      this.state.selectRef.classList.add(\"add-flag\");\n    };\n\n    this.accordionContent = [];\n    this.state = {\n      questionsData: [],\n      selectRef: undefined,\n      activateQue: 0,\n      leftActiveQue: 0\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      questionsData: props.questionsData,\n      activateQue: props.activateQue,\n      footerClick: props.footerClick\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextProps === this.props && nextProps.activateQue == this.props.activateQue) {\n      return false;\n    } else if (nextProps.selectRef !== this.props.selectRef) {\n      return false;\n    } else if (nextProps.flag !== this.props.flag) {\n      return false;\n    } else {\n      this.changeBg(nextProps.activateQue, nextProps.answered, nextProps.footerClick);\n      return true;\n    }\n  }\n\n  componentDidMount() {\n    this.props.flagClicked(this.flagQuestion);\n  }\n\n  render() {\n    const handleClick = (e, index) => {\n      if (this.state.selectRef) {\n        this.state.selectRef.classList.remove(\"selected\");\n      }\n\n      this.setState({\n        selectRef: this.accordionContent[index],\n        leftActiveQue: index\n      });\n      this.accordionContent[index].classList.add(\"selected\");\n      this.props.handleQuestionClick(index);\n    };\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"questions__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, this.state.questionsData && this.state.questionsData.map((question, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: `question`,\n      ref: ref => this.accordionContent[index] = ref,\n      onClick: e => handleClick(e, index),\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, index - -1))));\n  }\n\n}","map":{"version":3,"sources":["D:/Final year project/project_repo/EduSync/client/esm-client/src/testPreview/LeftSide.js"],"names":["React","Component","LeftSide","constructor","props","changeBg","activatedQue","answered","footerClicked","state","selectRef","classList","remove","accordionContent","add","setState","flagQuestion","setFlag","questionsData","undefined","activateQue","leftActiveQue","getDerivedStateFromProps","footerClick","shouldComponentUpdate","nextProps","nextState","flag","componentDidMount","flagClicked","render","handleClick","e","index","handleQuestionClick","map","question","ref"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC9CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAmBnBC,QAnBmB,GAmBR,CAACC,YAAD,EAAeC,QAAf,EAAyBC,aAAzB,KAA2C;AACpD,UAAI,KAAKC,KAAL,CAAWC,SAAf,EAA0B;AACxB,aAAKD,KAAL,CAAWC,SAAX,CAAqBC,SAArB,CAA+BC,MAA/B,CAAsC,UAAtC;;AACA,YAAIL,QAAQ,IAAI,KAAhB,EAAuB;AACrB,eAAKE,KAAL,CAAWC,SAAX,CAAqBC,SAArB,CAA+BC,MAA/B,CAAsC,UAAtC;AACD;AACF;;AACD,UAAI,KAAKC,gBAAL,CAAsBP,YAAtB,CAAJ,EACE,KAAKO,gBAAL,CAAsBP,YAAtB,EAAoCK,SAApC,CAA8CG,GAA9C,CAAkD,UAAlD;;AACF,UAAIP,QAAQ,IAAIC,aAAa,IAAI,KAAjC,EAAwC;AACtC,aAAKK,gBAAL,CAAsBP,YAAtB,EAAoCK,SAApC,CAA8CG,GAA9C,CAAkD,UAAlD;AACD;;AACD,WAAKC,QAAL,CAAc;AACZL,QAAAA,SAAS,EAAE,KAAKG,gBAAL,CAAsBP,YAAtB;AADC,OAAd;AAGD,KAlCkB;;AAAA,SAuDnBU,YAvDmB,GAuDJ,MAAM;AACnB,WAAKP,KAAL,CAAWC,SAAX,CAAqBC,SAArB,CAA+BG,GAA/B,CAAmC,SAAnC;AACD,KAzDkB;;AAAA,SA8DnBG,OA9DmB,GA8DT,MAAM;AACd,WAAKR,KAAL,CAAWC,SAAX,CAAqBC,SAArB,CAA+BG,GAA/B,CAAmC,UAAnC;AACD,KAhEkB;;AAEjB,SAAKD,gBAAL,GAAwB,EAAxB;AACA,SAAKJ,KAAL,GAAa;AACXS,MAAAA,aAAa,EAAE,EADJ;AAEXR,MAAAA,SAAS,EAAES,SAFA;AAGXC,MAAAA,WAAW,EAAE,CAHF;AAIXC,MAAAA,aAAa,EAAE;AAJJ,KAAb;AAMD;;AAED,SAAOC,wBAAP,CAAgClB,KAAhC,EAAuCK,KAAvC,EAA8C;AAC5C,WAAO;AACLS,MAAAA,aAAa,EAAEd,KAAK,CAACc,aADhB;AAELE,MAAAA,WAAW,EAAEhB,KAAK,CAACgB,WAFd;AAGLG,MAAAA,WAAW,EAAEnB,KAAK,CAACmB;AAHd,KAAP;AAKD;;AAkBDC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAC1C,QACED,SAAS,KAAK,KAAKrB,KAAnB,IACAqB,SAAS,CAACL,WAAV,IAAyB,KAAKhB,KAAL,CAAWgB,WAFtC,EAGE;AACA,aAAO,KAAP;AACD,KALD,MAKO,IAAIK,SAAS,CAACf,SAAV,KAAwB,KAAKN,KAAL,CAAWM,SAAvC,EAAkD;AACvD,aAAO,KAAP;AACD,KAFM,MAEA,IAAIe,SAAS,CAACE,IAAV,KAAmB,KAAKvB,KAAL,CAAWuB,IAAlC,EAAwC;AAC7C,aAAO,KAAP;AACD,KAFM,MAEA;AACL,WAAKtB,QAAL,CACEoB,SAAS,CAACL,WADZ,EAEEK,SAAS,CAAClB,QAFZ,EAGEkB,SAAS,CAACF,WAHZ;AAMA,aAAO,IAAP;AACD;AACF;;AAIDK,EAAAA,iBAAiB,GAAG;AAClB,SAAKxB,KAAL,CAAWyB,WAAX,CAAuB,KAAKb,YAA5B;AACD;;AAMDc,EAAAA,MAAM,GAAG;AACP,UAAMC,WAAW,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAChC,UAAI,KAAKxB,KAAL,CAAWC,SAAf,EAA0B;AACxB,aAAKD,KAAL,CAAWC,SAAX,CAAqBC,SAArB,CAA+BC,MAA/B,CAAsC,UAAtC;AACD;;AAED,WAAKG,QAAL,CAAc;AACZL,QAAAA,SAAS,EAAE,KAAKG,gBAAL,CAAsBoB,KAAtB,CADC;AAEZZ,QAAAA,aAAa,EAAEY;AAFH,OAAd;AAIA,WAAKpB,gBAAL,CAAsBoB,KAAtB,EAA6BtB,SAA7B,CAAuCG,GAAvC,CAA2C,UAA3C;AAEA,WAAKV,KAAL,CAAW8B,mBAAX,CAA+BD,KAA/B;AACD,KAZD;;AAcA,wBACE,uDACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKxB,KAAL,CAAWS,aAAX,IACC,KAAKT,KAAL,CAAWS,aAAX,CAAyBiB,GAAzB,CAA6B,CAACC,QAAD,EAAWH,KAAX,kBAC3B;AACE,MAAA,SAAS,EAAG,UADd;AAEE,MAAA,GAAG,EAAGI,GAAD,IAAU,KAAKxB,gBAAL,CAAsBoB,KAAtB,IAA+BI,GAFhD;AAGE,MAAA,OAAO,EAAGL,CAAD,IAAOD,WAAW,CAACC,CAAD,EAAIC,KAAJ,CAH7B;AAIE,MAAA,GAAG,EAAEA,KAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGA,KAAK,GAAG,CAAC,CANZ,CADF,CAFJ,CADF,CADF;AAiBD;;AAnG6C","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class LeftSide extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.accordionContent = [];\r\n    this.state = {\r\n      questionsData: [],\r\n      selectRef: undefined,\r\n      activateQue: 0,\r\n      leftActiveQue: 0,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {\r\n      questionsData: props.questionsData,\r\n      activateQue: props.activateQue,\r\n      footerClick: props.footerClick,\r\n    };\r\n  }\r\n\r\n  changeBg = (activatedQue, answered, footerClicked) => {\r\n    if (this.state.selectRef) {\r\n      this.state.selectRef.classList.remove(\"selected\");\r\n      if (answered == false) {\r\n        this.state.selectRef.classList.remove(\"answered\");\r\n      }\r\n    }\r\n    if (this.accordionContent[activatedQue])\r\n      this.accordionContent[activatedQue].classList.add(\"selected\");\r\n    if (answered && footerClicked == false) {\r\n      this.accordionContent[activatedQue].classList.add(\"answered\");\r\n    }\r\n    this.setState({\r\n      selectRef: this.accordionContent[activatedQue],\r\n    });\r\n  };\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (\r\n      nextProps === this.props &&\r\n      nextProps.activateQue == this.props.activateQue\r\n    ) {\r\n      return false;\r\n    } else if (nextProps.selectRef !== this.props.selectRef) {\r\n      return false;\r\n    } else if (nextProps.flag !== this.props.flag) {\r\n      return false;\r\n    } else {\r\n      this.changeBg(\r\n        nextProps.activateQue,\r\n        nextProps.answered,\r\n        nextProps.footerClick\r\n      );\r\n\r\n      return true;\r\n    }\r\n  }\r\n  flagQuestion = () => {\r\n    this.state.selectRef.classList.add(\"flagged\");\r\n  };\r\n  componentDidMount() {\r\n    this.props.flagClicked(this.flagQuestion);\r\n  }\r\n\r\n  setFlag = () => {\r\n    this.state.selectRef.classList.add(\"add-flag\");\r\n  };\r\n\r\n  render() {\r\n    const handleClick = (e, index) => {\r\n      if (this.state.selectRef) {\r\n        this.state.selectRef.classList.remove(\"selected\");\r\n      }\r\n\r\n      this.setState({\r\n        selectRef: this.accordionContent[index],\r\n        leftActiveQue: index,\r\n      });\r\n      this.accordionContent[index].classList.add(\"selected\");\r\n\r\n      this.props.handleQuestionClick(index);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <div className=\"questions__wrapper\">\r\n          {this.state.questionsData &&\r\n            this.state.questionsData.map((question, index) => (\r\n              <div\r\n                className={`question`}\r\n                ref={(ref) => (this.accordionContent[index] = ref)}\r\n                onClick={(e) => handleClick(e, index)}\r\n                key={index}\r\n              >\r\n                {index - -1}\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}