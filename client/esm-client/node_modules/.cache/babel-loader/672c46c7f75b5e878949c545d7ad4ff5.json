{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final year project\\\\project_repo\\\\EduSync\\\\client\\\\esm-client\\\\src\\\\testPreview\\\\Counter.js\";\nimport React, { useState, useEffect } from \"react\";\nimport CountdownTimer from \"react-component-countdown-timer\";\nexport default function Counter(props) {\n  const {\n    testID,\n    totalMinutes\n  } = props;\n  let time;\n\n  if (JSON.parse(localStorage.getItem(`${testID}`)) == null) {\n    time = parseInt(totalMinutes) * 60;\n  } else {\n    const testData = JSON.parse(localStorage.getItem(`${testID}`));\n    let remainingTime = testData.rM;\n    time = parseInt(remainingTime * 60);\n  }\n\n  const handleCounterEnd = () => {\n    props.handleCounter();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CountdownTimer, {\n    count: time,\n    hideDay: true,\n    onEnd: handleCounterEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["D:/Final year project/project_repo/EduSync/client/esm-client/src/testPreview/Counter.js"],"names":["React","useState","useEffect","CountdownTimer","Counter","props","testID","totalMinutes","time","JSON","parse","localStorage","getItem","parseInt","testData","remainingTime","rM","handleCounterEnd","handleCounter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACrC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAA2BF,KAAjC;AACA,MAAIG,IAAJ;;AACA,MAAIC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAsB,GAAEN,MAAO,EAA/B,CAAX,KAAiD,IAArD,EAA2D;AACzDE,IAAAA,IAAI,GAAGK,QAAQ,CAACN,YAAD,CAAR,GAAyB,EAAhC;AACD,GAFD,MAEO;AACL,UAAMO,QAAQ,GAAGL,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAsB,GAAEN,MAAO,EAA/B,CAAX,CAAjB;AACA,QAAIS,aAAa,GAAGD,QAAQ,CAACE,EAA7B;AACAR,IAAAA,IAAI,GAAGK,QAAQ,CAACE,aAAa,GAAG,EAAjB,CAAf;AACD;;AACD,QAAME,gBAAgB,GAAE,MAAI;AAC1BZ,IAAAA,KAAK,CAACa,aAAN;AACD,GAFD;;AAIA,sBACE,uDACE,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAEV,IAAvB;AAA6B,IAAA,OAAO,EAAE,IAAtC;AAA4C,IAAA,KAAK,EAAES,gBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport CountdownTimer from \"react-component-countdown-timer\";\r\n\r\nexport default function Counter(props) {\r\n  const { testID, totalMinutes } = props;\r\n  let time;\r\n  if (JSON.parse(localStorage.getItem(`${testID}`)) == null) {\r\n    time = parseInt(totalMinutes) * 60;\r\n  } else {\r\n    const testData = JSON.parse(localStorage.getItem(`${testID}`));\r\n    let remainingTime = testData.rM;\r\n    time = parseInt(remainingTime * 60);\r\n  }\r\n  const handleCounterEnd =()=>{\r\n    props.handleCounter();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CountdownTimer count={time} hideDay={true} onEnd={handleCounterEnd} />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}