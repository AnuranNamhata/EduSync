{"ast":null,"code":"import { SUBMIT_TEST_REQUEST, SUBMIT_TEST_SUCCESS, SUBMIT_TEST_FAILURE, ASSIGNED_TEST_REQUEST, ASSIGNED_TEST_FAILURE, ASSIGNED_TEST_SUCCESS, SET_TEST_CREATED_FALSE } from \"../actions/TeacherActions\";\nconst initialState = {\n  isFetching: false,\n  isLoadingTest: false,\n  fetchingError: false,\n  isFetched: false,\n  testCreated: false,\n  testSubmitted: false,\n  testSubmitError: false,\n  assignedTests: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SUBMIT_TEST_REQUEST:\n      return { ...state,\n        isFetching: true,\n        isLoadingTest: true,\n        fetchingError: false\n      };\n\n    case SUBMIT_TEST_SUCCESS:\n      return { ...state,\n        isFetching: false,\n        testCreated: true,\n        isLoadingTest: false,\n        isFetched: true\n      };\n\n    case SUBMIT_TEST_FAILURE:\n      return { ...state,\n        isFetching: true,\n        isLoadingTest: true,\n        fetchingError: false\n      };\n\n    case ASSIGNED_TEST_REQUEST:\n      return { ...state,\n        isFetching: true,\n        isLoadingTest: true,\n        fetchingError: false\n      };\n\n    case ASSIGNED_TEST_SUCCESS:\n      return { ...state,\n        isFetching: false,\n        testCreated: true,\n        isLoadingTest: false,\n        isFetched: true,\n        assignedTests: action.tests\n      };\n\n    case ASSIGNED_TEST_FAILURE:\n      return { ...state,\n        isFetching: true,\n        isLoadingTest: true,\n        fetchingError: false\n      };\n\n    case SET_TEST_CREATED_FALSE:\n      return { ...state,\n        testCreated: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/Final year project/project_repo/EduSync/client/esm-client/src/reducers/teacherReducer.js"],"names":["SUBMIT_TEST_REQUEST","SUBMIT_TEST_SUCCESS","SUBMIT_TEST_FAILURE","ASSIGNED_TEST_REQUEST","ASSIGNED_TEST_FAILURE","ASSIGNED_TEST_SUCCESS","SET_TEST_CREATED_FALSE","initialState","isFetching","isLoadingTest","fetchingError","isFetched","testCreated","testSubmitted","testSubmitError","assignedTests","state","action","type","tests"],"mappings":"AAAA,SACEA,mBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,qBAJF,EAKEC,qBALF,EAMEC,qBANF,EAOEC,sBAPF,QAQO,2BARP;AAUA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,aAAa,EAAE,KAFI;AAGnBC,EAAAA,aAAa,EAAE,KAHI;AAInBC,EAAAA,SAAS,EAAE,KAJQ;AAKnBC,EAAAA,WAAW,EAAE,KALM;AAMnBC,EAAAA,aAAa,EAAE,KANI;AAOnBC,EAAAA,eAAe,EAAE,KAPE;AAQnBC,EAAAA,aAAa,EAAE;AARI,CAArB;AAWA,eAAe,UAAUC,KAAK,GAAGT,YAAlB,EAAgCU,MAAhC,EAAwC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKlB,mBAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELR,QAAAA,UAAU,EAAE,IAFP;AAGLC,QAAAA,aAAa,EAAE,IAHV;AAILC,QAAAA,aAAa,EAAE;AAJV,OAAP;;AAMF,SAAKT,mBAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELR,QAAAA,UAAU,EAAE,KAFP;AAGLI,QAAAA,WAAW,EAAE,IAHR;AAILH,QAAAA,aAAa,EAAE,KAJV;AAKLE,QAAAA,SAAS,EAAE;AALN,OAAP;;AAOF,SAAKT,mBAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELR,QAAAA,UAAU,EAAE,IAFP;AAGLC,QAAAA,aAAa,EAAE,IAHV;AAILC,QAAAA,aAAa,EAAE;AAJV,OAAP;;AAMF,SAAKP,qBAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELR,QAAAA,UAAU,EAAE,IAFP;AAGLC,QAAAA,aAAa,EAAE,IAHV;AAILC,QAAAA,aAAa,EAAE;AAJV,OAAP;;AAMF,SAAKL,qBAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELR,QAAAA,UAAU,EAAE,KAFP;AAGLI,QAAAA,WAAW,EAAE,IAHR;AAILH,QAAAA,aAAa,EAAE,KAJV;AAKLE,QAAAA,SAAS,EAAE,IALN;AAMLI,QAAAA,aAAa,EAAEE,MAAM,CAACE;AANjB,OAAP;;AAQF,SAAKf,qBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELR,QAAAA,UAAU,EAAE,IAFP;AAGLC,QAAAA,aAAa,EAAE,IAHV;AAILC,QAAAA,aAAa,EAAE;AAJV,OAAP;;AAMF,SAAKJ,sBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,WAAW,EAAE;AAFR,OAAP;;AAKF;AACE,aAAOI,KAAP;AArDJ;AAuDD","sourcesContent":["import {\r\n  SUBMIT_TEST_REQUEST,\r\n  SUBMIT_TEST_SUCCESS,\r\n  SUBMIT_TEST_FAILURE,\r\n  ASSIGNED_TEST_REQUEST,\r\n  ASSIGNED_TEST_FAILURE,\r\n  ASSIGNED_TEST_SUCCESS,\r\n  SET_TEST_CREATED_FALSE,\r\n} from \"../actions/TeacherActions\";\r\n\r\nconst initialState = {\r\n  isFetching: false,\r\n  isLoadingTest: false,\r\n  fetchingError: false,\r\n  isFetched: false,\r\n  testCreated: false,\r\n  testSubmitted: false,\r\n  testSubmitError: false,\r\n  assignedTests: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SUBMIT_TEST_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        fetchingError: false,\r\n      };\r\n    case SUBMIT_TEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        testCreated: true,\r\n        isLoadingTest: false,\r\n        isFetched: true,\r\n      };\r\n    case SUBMIT_TEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        fetchingError: false,\r\n      };\r\n    case ASSIGNED_TEST_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        fetchingError: false,\r\n      };\r\n    case ASSIGNED_TEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        testCreated: true,\r\n        isLoadingTest: false,\r\n        isFetched: true,\r\n        assignedTests: action.tests,\r\n      };\r\n    case ASSIGNED_TEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        isLoadingTest: true,\r\n        fetchingError: false,\r\n      };\r\n    case SET_TEST_CREATED_FALSE:\r\n      return {\r\n        ...state,\r\n        testCreated: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}