{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final year project\\\\project_repo\\\\EduSync\\\\client\\\\esm-client\\\\src\\\\testPreview\\\\TestPreview.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateTimeSpentByStudent } from \"../actions/attemptTestActions\";\nimport Counter from \"./Counter\";\nimport HandleLiveTest from \"./HandleLiveTest\";\nclass TestPreview extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      testName: this.props.selectedTest.testName,\n      minutes: this.props.selectedTest.minutes,\n      _id: this.props.selectedTest._id,\n      intervalId: null,\n      timer: this.props.timer\n    };\n    this.handleCounter = () => {\n      this.clickChild();\n    };\n  }\n  componentDidMount() {\n    this.loadData(this.state._id);\n    const intervalID = setInterval(this.loadData.bind(this), 60000);\n    this.setState({\n      intervalId: intervalID,\n      timer: this.state.timer\n    });\n  }\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n  loadData() {\n    try {\n      //   let testName, minutes, _id;\n      let testName, tM, _id, rM;\n      if (JSON.parse(localStorage.getItem(this.state._id)) === null) {\n        testName = this.state.testName;\n        tM = this.state.minutes;\n        _id = this.state._id;\n        rM = tM;\n        localStorage.setItem(`${_id}`, JSON.stringify({\n          testName,\n          _id,\n          tM,\n          rM\n        }));\n      } else {\n        const testData = JSON.parse(localStorage.getItem(`${this.state._id}`));\n        let {\n          testName,\n          tM,\n          _id,\n          rM\n        } = testData;\n        rM = rM - 1;\n        localStorage.setItem(`${_id}`, JSON.stringify({\n          testName,\n          _id,\n          tM,\n          rM\n        }));\n      }\n\n      //   const profileID = localStorage.getItem(\"profileID\"),\n      //     completed = false;\n      //   const testData = JSON.parse(localStorage.getItem(\"trash\"));\n      //   let updatingAttemptedMinutes = localStorage.getItem(testData._id);\n\n      //   const data = {\n      //     profileID,\n      //     testName,\n      //     _id,\n      //     completed,\n      //     minutes,\n      //     updatingAttemptedMinutes,\n      //   };\n      //   //console.log(this.props.selectedTest, \"props\")\n      //   if (_id) {\n      //    // this.props.updateTimer(data);\n      //   }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Counter, {\n      testID: this.state._id,\n      totalMinutes: this.state.minutes,\n      handleCounter: this.handleCounter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(HandleLiveTest, {\n      testID: this.state._id,\n      totalMinutes: this.state.minutes,\n      testName: this.state.testName,\n      testName: this.state.testName,\n      totalMinutes: this.state.minutes,\n      counterEnd: click => this.clickChild = click,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }));\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    selectedTest: state.selectedTest.selectedTestData,\n    timer: state.userAttemptedTime.attemptedTime\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateTimer: data => dispatch(updateTimeSpentByStudent(data))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TestPreview);","map":{"version":3,"names":["React","Component","connect","updateTimeSpentByStudent","Counter","HandleLiveTest","TestPreview","constructor","args","state","testName","props","selectedTest","minutes","_id","intervalId","timer","handleCounter","clickChild","componentDidMount","loadData","intervalID","setInterval","bind","setState","componentWillUnmount","clearInterval","tM","rM","JSON","parse","localStorage","getItem","setItem","stringify","testData","e","console","log","render","createElement","Fragment","testID","totalMinutes","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","counterEnd","click","mapStateToProps","selectedTestData","userAttemptedTime","attemptedTime","mapDispatchToProps","dispatch","updateTimer","data"],"sources":["D:/Final year project/project_repo/EduSync/client/esm-client/src/testPreview/TestPreview.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateTimeSpentByStudent } from \"../actions/attemptTestActions\";\r\nimport Counter from \"./Counter\";\r\nimport HandleLiveTest from \"./HandleLiveTest\";\r\n\r\nclass TestPreview extends Component {\r\n  state = {\r\n    testName: this.props.selectedTest.testName,\r\n    minutes: this.props.selectedTest.minutes,\r\n    _id: this.props.selectedTest._id,\r\n    intervalId: null,\r\n    timer: this.props.timer,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadData(this.state._id);\r\n    const intervalID = setInterval(this.loadData.bind(this), 60000);\r\n    this.setState({ intervalId: intervalID, timer: this.state.timer });\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.state.intervalId);\r\n  }\r\n  handleCounter =()=>{\r\n    this.clickChild();\r\n  }\r\n\r\n  loadData() {\r\n    try {\r\n      //   let testName, minutes, _id;\r\n      let testName, tM, _id, rM;\r\n      if (JSON.parse(localStorage.getItem(this.state._id)) === null) {\r\n        testName = this.state.testName;\r\n        tM = this.state.minutes;\r\n        _id = this.state._id;\r\n        rM = tM;\r\n        localStorage.setItem(\r\n          `${_id}`,\r\n          JSON.stringify({ testName, _id, tM, rM })\r\n        );\r\n      } else {\r\n        const testData = JSON.parse(localStorage.getItem(`${this.state._id}`));\r\n\r\n        let { testName, tM, _id, rM } = testData;\r\n        rM = rM - 1;\r\n        localStorage.setItem(\r\n          `${_id}`,\r\n          JSON.stringify({ testName, _id, tM, rM })\r\n        );\r\n      }\r\n\r\n      //   const profileID = localStorage.getItem(\"profileID\"),\r\n      //     completed = false;\r\n      //   const testData = JSON.parse(localStorage.getItem(\"trash\"));\r\n      //   let updatingAttemptedMinutes = localStorage.getItem(testData._id);\r\n\r\n      //   const data = {\r\n      //     profileID,\r\n      //     testName,\r\n      //     _id,\r\n      //     completed,\r\n      //     minutes,\r\n      //     updatingAttemptedMinutes,\r\n      //   };\r\n      //   //console.log(this.props.selectedTest, \"props\")\r\n      //   if (_id) {\r\n      //    // this.props.updateTimer(data);\r\n      //   }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  \r\n \r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Counter testID={this.state._id} totalMinutes={this.state.minutes} handleCounter ={this.handleCounter}/>\r\n        <HandleLiveTest\r\n          testID={this.state._id}\r\n          totalMinutes={this.state.minutes}\r\n          testName={this.state.testName}\r\n          testName={this.state.testName}\r\n          totalMinutes={this.state.minutes}\r\n          counterEnd ={click => this.clickChild = click}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestData,\r\n    timer: state.userAttemptedTime.attemptedTime,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateTimer: (data) => dispatch(updateTimeSpentByStudent(data)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TestPreview);\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,cAAc,MAAM,kBAAkB;AAE7C,MAAMC,WAAW,SAASL,SAAS,CAAC;EAAAM,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAClCC,KAAK,GAAG;MACNC,QAAQ,EAAE,IAAI,CAACC,KAAK,CAACC,YAAY,CAACF,QAAQ;MAC1CG,OAAO,EAAE,IAAI,CAACF,KAAK,CAACC,YAAY,CAACC,OAAO;MACxCC,GAAG,EAAE,IAAI,CAACH,KAAK,CAACC,YAAY,CAACE,GAAG;MAChCC,UAAU,EAAE,IAAI;MAChBC,KAAK,EAAE,IAAI,CAACL,KAAK,CAACK;IACpB,CAAC;IAAA,KAUDC,aAAa,GAAE,MAAI;MACjB,IAAI,CAACC,UAAU,CAAC,CAAC;IACnB,CAAC;EAAA;EAVDC,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACX,KAAK,CAACK,GAAG,CAAC;IAC7B,MAAMO,UAAU,GAAGC,WAAW,CAAC,IAAI,CAACF,QAAQ,CAACG,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC;IAC/D,IAAI,CAACC,QAAQ,CAAC;MAAET,UAAU,EAAEM,UAAU;MAAEL,KAAK,EAAE,IAAI,CAACP,KAAK,CAACO;IAAM,CAAC,CAAC;EACpE;EACAS,oBAAoBA,CAAA,EAAG;IACrBC,aAAa,CAAC,IAAI,CAACjB,KAAK,CAACM,UAAU,CAAC;EACtC;EAKAK,QAAQA,CAAA,EAAG;IACT,IAAI;MACF;MACA,IAAIV,QAAQ,EAAEiB,EAAE,EAAEb,GAAG,EAAEc,EAAE;MACzB,IAAIC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACvB,KAAK,CAACK,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE;QAC7DJ,QAAQ,GAAG,IAAI,CAACD,KAAK,CAACC,QAAQ;QAC9BiB,EAAE,GAAG,IAAI,CAAClB,KAAK,CAACI,OAAO;QACvBC,GAAG,GAAG,IAAI,CAACL,KAAK,CAACK,GAAG;QACpBc,EAAE,GAAGD,EAAE;QACPI,YAAY,CAACE,OAAO,CACjB,GAAEnB,GAAI,EAAC,EACRe,IAAI,CAACK,SAAS,CAAC;UAAExB,QAAQ;UAAEI,GAAG;UAAEa,EAAE;UAAEC;QAAG,CAAC,CAC1C,CAAC;MACH,CAAC,MAAM;QACL,MAAMO,QAAQ,GAAGN,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAE,GAAE,IAAI,CAACvB,KAAK,CAACK,GAAI,EAAC,CAAC,CAAC;QAEtE,IAAI;UAAEJ,QAAQ;UAAEiB,EAAE;UAAEb,GAAG;UAAEc;QAAG,CAAC,GAAGO,QAAQ;QACxCP,EAAE,GAAGA,EAAE,GAAG,CAAC;QACXG,YAAY,CAACE,OAAO,CACjB,GAAEnB,GAAI,EAAC,EACRe,IAAI,CAACK,SAAS,CAAC;UAAExB,QAAQ;UAAEI,GAAG;UAAEa,EAAE;UAAEC;QAAG,CAAC,CAC1C,CAAC;MACH;;MAEA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF,CAAC,CAAC,OAAOQ,CAAC,EAAE;MACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IAChB;EACF;EAIAG,MAAMA,CAAA,EAAG;IACP,oBACEvC,KAAA,CAAAwC,aAAA,CAAAxC,KAAA,CAAAyC,QAAA,qBACEzC,KAAA,CAAAwC,aAAA,CAACpC,OAAO;MAACsC,MAAM,EAAE,IAAI,CAACjC,KAAK,CAACK,GAAI;MAAC6B,YAAY,EAAE,IAAI,CAAClC,KAAK,CAACI,OAAQ;MAACI,aAAa,EAAG,IAAI,CAACA,aAAc;MAAA2B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAC,CAAC,eACxGjD,KAAA,CAAAwC,aAAA,CAACnC,cAAc;MACbqC,MAAM,EAAE,IAAI,CAACjC,KAAK,CAACK,GAAI;MACvB6B,YAAY,EAAE,IAAI,CAAClC,KAAK,CAACI,OAAQ;MACjCH,QAAQ,EAAE,IAAI,CAACD,KAAK,CAACC,QAAS;MAC9BA,QAAQ,EAAE,IAAI,CAACD,KAAK,CAACC,QAAS;MAC9BiC,YAAY,EAAE,IAAI,CAAClC,KAAK,CAACI,OAAQ;MACjCqC,UAAU,EAAGC,KAAK,IAAI,IAAI,CAACjC,UAAU,GAAGiC,KAAM;MAAAP,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAC/C,CACD,CAAC;EAEP;AACF;AAEA,MAAMG,eAAe,GAAI3C,KAAK,IAAK;EACjC,OAAO;IACLG,YAAY,EAAEH,KAAK,CAACG,YAAY,CAACyC,gBAAgB;IACjDrC,KAAK,EAAEP,KAAK,CAAC6C,iBAAiB,CAACC;EACjC,CAAC;AACH,CAAC;AAED,MAAMC,kBAAkB,GAAIC,QAAQ,IAAK;EACvC,OAAO;IACLC,WAAW,EAAGC,IAAI,IAAKF,QAAQ,CAACtD,wBAAwB,CAACwD,IAAI,CAAC;EAChE,CAAC;AACH,CAAC;AAED,eAAezD,OAAO,CAACkD,eAAe,EAAEI,kBAAkB,CAAC,CAAClD,WAAW,CAAC"},"metadata":{},"sourceType":"module"}