{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final year project\\\\project_repo\\\\EduSync\\\\client\\\\esm-client\\\\src\\\\dashboard\\\\TestCard.js\";\nimport React, { useEffect } from \"react\";\nimport \"./TestCard.css\";\nimport { Link } from \"react-router-dom\";\nimport { HiOutlineClipboardList, HiClipboardCopy } from \"react-icons/hi\";\nimport { fetchTests } from \"../actions/testActions\";\nimport { connect } from \"react-redux\";\nimport { Skeleton } from \"antd\";\nfunction TestCard(props) {\n  let {\n    tests,\n    isLoading,\n    studentClassName,\n    trimLength\n  } = props;\n  if (tests) tests = tests.length > trimLength ? tests.slice(-trimLength).reverse() : tests;\n  useEffect(() => {\n    props.fetchTests(studentClassName);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left__header red__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"left__header__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HiOutlineClipboardList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }\n  }), \"Today's Test\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, !isLoading && tests ? /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"left__body__list__ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, tests.map((test, index) => /*#__PURE__*/React.createElement(Link, {\n    to: \"/attempt-test\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"left__body__test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test__index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"index__box red__index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, index + 1)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test__name \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }\n  }, \" \", test.testName), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test__icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(HiClipboardCopy, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  })))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"skeleton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, Array(trimLength).fill().map((item, i) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"single-skeleton\",\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Skeleton.Avatar, {\n    className: \"avatar-skelton\",\n    active: true,\n    size: \"default\",\n    shape: \"square\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Skeleton.Input, {\n    className: \"input-skelton\",\n    active: true,\n    size: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }))))));\n}\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.tests.isLoadingTest,\n    tests: state.tests.test\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTests: classID => dispatch(fetchTests(classID))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TestCard);","map":{"version":3,"names":["React","useEffect","Link","HiOutlineClipboardList","HiClipboardCopy","fetchTests","connect","Skeleton","TestCard","props","tests","isLoading","studentClassName","trimLength","length","slice","reverse","createElement","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","test","index","to","key","testName","Array","fill","item","i","Avatar","active","size","shape","Input","mapStateToProps","state","isLoadingTest","mapDispatchToProps","dispatch","classID"],"sources":["D:/Final year project/project_repo/EduSync/client/esm-client/src/dashboard/TestCard.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./TestCard.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HiOutlineClipboardList, HiClipboardCopy } from \"react-icons/hi\";\r\nimport { fetchTests } from \"../actions/testActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nfunction TestCard(props) {\r\n  let { tests, isLoading, studentClassName, trimLength } = props;\r\n  if (tests)\r\n    tests =\r\n      tests.length > trimLength ? tests.slice(-trimLength).reverse() : tests;\r\n\r\n  useEffect(() => {\r\n    props.fetchTests(studentClassName);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"left__header red__header\">\r\n        <p className=\"left__header__text\">\r\n          {<HiOutlineClipboardList />}Today's Test\r\n        </p>\r\n      </div>\r\n      <div className=\"left__body\">\r\n        {!isLoading && tests ? (\r\n          <ul className=\"left__body__list__ul\">\r\n            {tests.map((test, index) => (\r\n              <Link to=\"/attempt-test\" key={index}>\r\n                <li className=\"left__body__test\">\r\n                  <div className=\"test__index\">\r\n                    <p className=\"index__box red__index\">{index + 1}</p>\r\n                  </div>\r\n                  <div className=\"test__name \"> {test.testName}</div>\r\n                  <div className=\"test__icon\">\r\n                    <HiClipboardCopy />\r\n                  </div>\r\n                </li>\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <div className=\"skeleton\">\r\n            {Array(trimLength)\r\n              .fill()\r\n              .map((item, i) => (\r\n                <div className=\"single-skeleton\" key={i}>\r\n                  <Skeleton.Avatar\r\n                    className=\"avatar-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                    shape=\"square\"\r\n                  />\r\n                  <Skeleton.Input\r\n                    className=\"input-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                  />\r\n                </div>\r\n              ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.tests.isLoadingTest,\r\n    tests: state.tests.test,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTests: (classID) => dispatch(fetchTests(classID)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TestCard);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}