{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final year project\\\\project_repo\\\\EduSync\\\\client\\\\esm-client\\\\src\\\\App\\\\App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Login from \"../logIn/Login\";\nimport Signup from \"../signUp/Signup\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport ProtectedRoute from \"../protectedRoute/ProtectedRoute\";\nimport StudentDashboard from \"../dashboard/Dashboard\";\nimport TeacherDashboard from \"../Teacher/Dashboard/Dashboard\";\nimport AttemptTest from \"../attemptTest/AttemptTest\";\nimport Navbar from \"../navbar\";\nimport Result from \"../result/ResultWrapper\";\nimport TestInstruction from \"../TestInstructions/TestInstruction\";\nimport IndividualResult from \"../result/ShowResult\";\nimport TestPreviewWrapper from \"../testPreview/TestPreviewWrapper\";\nimport { connect } from \"react-redux\";\nimport { Modal } from \"antd\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport Profile from \"../profile/Profile\";\nimport { Roles } from \"../Roles/roles\";\nimport CreateTest from \"../Teacher/CreateTest/CreateTest\";\nimport AssignedTestsWrapper from \"../Teacher/AssigenedTest/AssignedTestsWrapper\";\nimport TestStatus from \"../Teacher/TestStatus/TestStatus\";\nimport { message } from \"antd\";\nimport { Offline, Online } from \"react-detect-offline\";\n\nfunction App(props) {\n  const [count, setCount] = useState(1);\n\n  const handleOffline = () => {\n    setCount(count + 1);\n\n    if (count % 2 == 0) {\n      message.success(\"Connected to internet\");\n    } else {\n      message.error(\"Please connect to internet\");\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"contextmenu\", e => {\n      e.preventDefault();\n    });\n    window.addEventListener(\"keydown\", e => {\n      console.log(e);\n\n      if (e.key == \"F12\") {\n        e.preventDefault();\n      }\n    });\n  }, []);\n  const {\n    selectedTestName,\n    selectedAssignedTestName\n  } = props;\n  const role = props.userInfo.role;\n  const {\n    confirm\n  } = Modal;\n  const history = useHistory();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: count % 2 ? \"\" : \" pointer__select__none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Offline, {\n    onChange: e => handleOffline(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/signin\",\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/signup\",\n    component: Signup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    exact: true,\n    path: \"/\",\n    component: Roles.teacher === role ? TeacherDashboard : StudentDashboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    exact: true,\n    path: \"/attempt-test\",\n    component: AttemptTest,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    exact: true,\n    path: \"/create-test\",\n    component: Roles.teacher === role ? CreateTest : AttemptTest,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    exact: true,\n    path: \"/result\",\n    component: Result,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    exact: true,\n    path: `/result/${selectedTestName}`,\n    component: IndividualResult,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    exact: true,\n    path: \"/test-instructions\",\n    component: TestInstruction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    exact: true,\n    path: \"/start-test\",\n    component: TestPreviewWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    exact: true,\n    path: \"/profile\",\n    component: Profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    exact: true,\n    path: \"/assigned-test\",\n    component: Roles.teacher === role ? AssignedTestsWrapper : StudentDashboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    exact: true,\n    path: `/test-status/${selectedAssignedTestName}`,\n    component: TestStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProtectedRoute, {\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }))));\n}\n\nconst mapStateToProps = state => {\n  var _state$selectedTest$s, _state$selectedTest$s2;\n\n  return {\n    selectedTestName: (_state$selectedTest$s = state.selectedTest.selectedTestResultData.testName) === null || _state$selectedTest$s === void 0 ? void 0 : _state$selectedTest$s.replace(/\\s+/g, \"-\").toLowerCase(),\n    userInfo: state.auth.user,\n    selectedAssignedTestName: (_state$selectedTest$s2 = state.selectedTest.selectedAssignedTestData.testName) === null || _state$selectedTest$s2 === void 0 ? void 0 : _state$selectedTest$s2.replace(/\\s+/g, \"-\").toLowerCase()\n  };\n};\n\nexport default connect(mapStateToProps, null)(App);","map":{"version":3,"sources":["D:/Final year project/project_repo/EduSync/client/esm-client/src/App/App.js"],"names":["React","useEffect","useState","Login","Signup","BrowserRouter","Router","Switch","Route","ProtectedRoute","StudentDashboard","TeacherDashboard","AttemptTest","Navbar","Result","TestInstruction","IndividualResult","TestPreviewWrapper","connect","Modal","ExclamationCircleOutlined","useHistory","Profile","Roles","CreateTest","AssignedTestsWrapper","TestStatus","message","Offline","Online","App","props","count","setCount","handleOffline","success","error","window","addEventListener","e","preventDefault","console","log","key","selectedTestName","selectedAssignedTestName","role","userInfo","confirm","history","teacher","mapStateToProps","state","selectedTest","selectedTestResultData","testName","replace","toLowerCase","auth","user","selectedAssignedTestData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Login from \"../logIn/Login\";\r\nimport Signup from \"../signUp/Signup\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport ProtectedRoute from \"../protectedRoute/ProtectedRoute\";\r\nimport StudentDashboard from \"../dashboard/Dashboard\";\r\nimport TeacherDashboard from \"../Teacher/Dashboard/Dashboard\";\r\nimport AttemptTest from \"../attemptTest/AttemptTest\";\r\nimport Navbar from \"../navbar\";\r\nimport Result from \"../result/ResultWrapper\";\r\nimport TestInstruction from \"../TestInstructions/TestInstruction\";\r\nimport IndividualResult from \"../result/ShowResult\";\r\nimport TestPreviewWrapper from \"../testPreview/TestPreviewWrapper\";\r\nimport { connect } from \"react-redux\";\r\nimport { Modal } from \"antd\";\r\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Profile from \"../profile/Profile\";\r\nimport { Roles } from \"../Roles/roles\";\r\nimport CreateTest from \"../Teacher/CreateTest/CreateTest\";\r\nimport AssignedTestsWrapper from \"../Teacher/AssigenedTest/AssignedTestsWrapper\";\r\nimport TestStatus from \"../Teacher/TestStatus/TestStatus\";\r\nimport { message } from \"antd\";\r\nimport { Offline, Online } from \"react-detect-offline\";\r\n\r\nfunction App(props) {\r\n  const [count, setCount] = useState(1);\r\n\r\n  const handleOffline = () => {\r\n    setCount(count + 1);\r\n    if (count % 2 == 0) {\r\n      message.success(\"Connected to internet\");\r\n    } else {\r\n      message.error(\"Please connect to internet\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"contextmenu\", (e) => {\r\n      e.preventDefault();\r\n    });\r\n    window.addEventListener(\"keydown\", (e) => {\r\n      console.log(e);\r\n      if (e.key == \"F12\") {\r\n        e.preventDefault();\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const { selectedTestName, selectedAssignedTestName } = props;\r\n  const role = props.userInfo.role;\r\n  const { confirm } = Modal;\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className={count % 2 ? \"\" : \" pointer__select__none\"}>\r\n      <Offline onChange={(e) => handleOffline(e)}></Offline>\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact={true} path={\"/signin\"} component={Login} />\r\n          <Route exact={true} path=\"/signup\" component={Signup} />\r\n          <ProtectedRoute\r\n            exact={true}\r\n            path=\"/\"\r\n            component={\r\n              Roles.teacher === role ? TeacherDashboard : StudentDashboard\r\n            }\r\n          />\r\n          <ProtectedRoute\r\n            exact={true}\r\n            path=\"/attempt-test\"\r\n            component={AttemptTest}\r\n          />\r\n          <ProtectedRoute\r\n            exact={true}\r\n            path=\"/create-test\"\r\n            component={Roles.teacher === role ? CreateTest : AttemptTest}\r\n          />\r\n          <ProtectedRoute exact={true} path=\"/result\" component={Result} />\r\n          <ProtectedRoute\r\n            exact={true}\r\n            path={`/result/${selectedTestName}`}\r\n            component={IndividualResult}\r\n          />\r\n          <ProtectedRoute\r\n            exact={true}\r\n            path=\"/test-instructions\"\r\n            component={TestInstruction}\r\n          />\r\n          <ProtectedRoute\r\n            exact={true}\r\n            path=\"/start-test\"\r\n            component={TestPreviewWrapper}\r\n          />\r\n          <ProtectedRoute exact={true} path=\"/profile\" component={Profile} />\r\n          <ProtectedRoute\r\n            exact={true}\r\n            path=\"/assigned-test\"\r\n            component={\r\n              Roles.teacher === role ? AssignedTestsWrapper : StudentDashboard\r\n            }\r\n          />\r\n          <ProtectedRoute\r\n            exact={true}\r\n            path={`/test-status/${selectedAssignedTestName}`}\r\n            component={TestStatus}\r\n          />\r\n          <ProtectedRoute component={Login} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTestName: state.selectedTest.selectedTestResultData.testName\r\n      ?.replace(/\\s+/g, \"-\")\r\n      .toLowerCase(),\r\n    userInfo: state.auth.user,\r\n    selectedAssignedTestName: state.selectedTest.selectedAssignedTestData.testName\r\n      ?.replace(/\\s+/g, \"-\")\r\n      .toLowerCase(),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n"]},"metadata":{},"sourceType":"module"}