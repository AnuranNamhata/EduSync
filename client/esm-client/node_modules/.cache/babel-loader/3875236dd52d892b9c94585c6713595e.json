{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final year project\\\\project_repo\\\\EduSync\\\\client\\\\esm-client\\\\src\\\\testPreview\\\\RightSide.js\";\nimport React, { Component } from \"react\";\nimport { Radio, Input } from \"antd\";\nimport { CloseOutlined } from \"@ant-design/icons\";\nimport { submitTest } from \"../actions/testActions\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { logoutUser } from \"../actions/authActions\";\n\nclass RightSide extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClearResponse = index => {\n      let newSelectedAnswers = this.state.selectedAnswers;\n      console.log(newSelectedAnswers[index]);\n      let blankClearAttempt = newSelectedAnswers[index] === undefined ? true : false;\n      newSelectedAnswers[index] = undefined;\n      this.setState({\n        selectedAnswers: newSelectedAnswers\n      });\n      this.props.handleClearResponse(index, blankClearAttempt);\n    };\n\n    this.onChange = (e, index) => {\n      let newSelectedAnswers = this.state.selectedAnswers;\n\n      if (newSelectedAnswers[index] === undefined) {\n        this.props.questionAnswered(index, e.target.value, false);\n      } else {\n        this.props.questionAnswered(index, e.target.value, true);\n      }\n\n      newSelectedAnswers[index] = e.target.value;\n      this.setState({\n        value: e.target.value,\n        selectedAnswers: newSelectedAnswers\n      });\n    };\n\n    this.changeActivatedQueInChild = changeActivatedQue => {\n      if (changeActivatedQue === \"next__question\") {\n        console.log(\"insdie if\");\n        console.log(this.state.questionsData.length, this.state.activateQue);\n\n        if (this.state.activateQue < this.state.questionsData.length - 1) {\n          this.setState({\n            activateQue: this.state.activateQue + 1\n          });\n          this.props.changeParentActivatedQue(this.state.activateQue + 1);\n        }\n      } else if (changeActivatedQue === \"previous__question\") {\n        if (this.state.activateQue > 0) {\n          this.setState({\n            activateQue: this.state.activateQue - 1\n          });\n          this.props.changeParentActivatedQue(this.state.activateQue - 1);\n        }\n      } else if (changeActivatedQue === \"flag__question\") {} else if (changeActivatedQue === \"end__test\") {} else {\n        this.setState({\n          activateQue: changeActivatedQue\n        });\n      }\n    };\n\n    this.submitTest = () => {\n      const {\n        userAnswers,\n        answers,\n        testName,\n        testID,\n        profileID,\n        firstName,\n        lastName\n      } = this.props;\n      let correct = 0,\n          wrong = 0,\n          unanswered = 0,\n          totalMarks = answers.length,\n          dataToSubmit;\n      userAnswers.map((element, index) => {\n        if (element === undefined) {\n          unanswered = unanswered + 1;\n        } else if (element !== answers[index]) {\n          wrong = wrong + 1;\n        } else {\n          correct = correct + 1;\n        }\n\n        dataToSubmit = {\n          testID,\n          correct,\n          unanswered,\n          totalMarks,\n          profileID,\n          testName,\n          firstName,\n          lastName,\n          wrong\n        };\n      });\n      this.props.submitTest(dataToSubmit);\n      this.props.signOut();\n      return;\n    };\n\n    this.state = {\n      activateQue: 0,\n      questionsData: [],\n      changeIndex: 0,\n      questionIndex: 0,\n      selectedAnswers: Array.apply(undefined, Array(5)),\n      value: null,\n      testID: null\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      questionsData: props.questionsData,\n      questionIndex: props.questionIndex,\n      testID: props.testID\n    };\n  }\n\n  componentDidMount() {\n    this.props.onRef(this);\n  }\n\n  componentWillUnmount() {\n    this.props.onRef(undefined);\n  }\n\n  render() {\n    const radioStyle = {\n      display: \"block\",\n      height: \"30px\",\n      lineHeight: \"30px\"\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"descripiton__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question__no\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, \"Question \", this.state.activateQue + 1, \" out of \", this.state.questionsData.length), this.state.questionsData && this.state.questionsData.map((question, index) => {\n      if (this.state.activateQue === index) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"description__box\",\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"descripiton\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }\n        }, \" \", question.description), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"options\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Radio.Group, {\n          onChange: e => this.onChange(e, index),\n          value: this.state.selectedAnswers[index],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Radio, {\n          style: radioStyle,\n          value: 1,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }\n        }, question.options[0].option), /*#__PURE__*/React.createElement(Radio, {\n          style: radioStyle,\n          value: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }\n        }, question.options[1].option), /*#__PURE__*/React.createElement(Radio, {\n          style: radioStyle,\n          value: 3,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }\n        }, question.options[2].option), /*#__PURE__*/React.createElement(Radio, {\n          style: radioStyle,\n          value: 4,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }\n        }, question.options[3].option)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"clear__response\",\n          onClick: () => this.handleClearResponse(index),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(CloseOutlined, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 26\n          }\n        }), \" Clear Response\")));\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    selectedTest: state.selectedTest.selectedTestData,\n    profileID: state.auth.user ? state.auth.profileID : null,\n    firstName: state.auth.user.firstName,\n    lastName: state.auth.user.lastName\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submitTest: data => dispatch(submitTest(data)),\n    signOut: () => dispatch(logoutUser())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RightSide);","map":{"version":3,"sources":["D:/Final year project/project_repo/EduSync/client/esm-client/src/testPreview/RightSide.js"],"names":["React","Component","Radio","Input","CloseOutlined","submitTest","connect","useHistory","logoutUser","RightSide","constructor","props","handleClearResponse","index","newSelectedAnswers","state","selectedAnswers","console","log","blankClearAttempt","undefined","setState","onChange","e","questionAnswered","target","value","changeActivatedQueInChild","changeActivatedQue","questionsData","length","activateQue","changeParentActivatedQue","userAnswers","answers","testName","testID","profileID","firstName","lastName","correct","wrong","unanswered","totalMarks","dataToSubmit","map","element","signOut","changeIndex","questionIndex","Array","apply","getDerivedStateFromProps","componentDidMount","onRef","componentWillUnmount","render","radioStyle","display","height","lineHeight","question","description","options","option","mapStateToProps","selectedTest","selectedTestData","auth","user","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Radio, Input } from \"antd\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport { submitTest } from \"../actions/testActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { logoutUser } from \"../actions/authActions\";\r\n\r\nclass RightSide extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activateQue: 0,\r\n      questionsData: [],\r\n      changeIndex: 0,\r\n      questionIndex: 0,\r\n      selectedAnswers: Array.apply(undefined, Array(5)),\r\n      value: null,\r\n      testID: null,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {\r\n      questionsData: props.questionsData,\r\n      questionIndex: props.questionIndex,\r\n      testID: props.testID,\r\n    };\r\n  }\r\n\r\n  handleClearResponse = (index) => {\r\n    let newSelectedAnswers = this.state.selectedAnswers;\r\n    console.log(newSelectedAnswers[index]);\r\n    let blankClearAttempt =\r\n      newSelectedAnswers[index] === undefined ? true : false;\r\n\r\n    newSelectedAnswers[index] = undefined;\r\n    this.setState({\r\n      selectedAnswers: newSelectedAnswers,\r\n    });\r\n    this.props.handleClearResponse(index, blankClearAttempt);\r\n  };\r\n  onChange = (e, index) => {\r\n    let newSelectedAnswers = this.state.selectedAnswers;\r\n    if (newSelectedAnswers[index] === undefined) {\r\n      this.props.questionAnswered(index, e.target.value, false);\r\n    } else {\r\n      this.props.questionAnswered(index, e.target.value, true);\r\n    }\r\n    newSelectedAnswers[index] = e.target.value;\r\n    this.setState({\r\n      value: e.target.value,\r\n      selectedAnswers: newSelectedAnswers,\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.props.onRef(this);\r\n  }\r\n\r\n  changeActivatedQueInChild = (changeActivatedQue) => {\r\n    if (changeActivatedQue === \"next__question\") {\r\n      console.log(\"insdie if\");\r\n      console.log(this.state.questionsData.length, this.state.activateQue);\r\n      if (this.state.activateQue < this.state.questionsData.length - 1) {\r\n        this.setState({\r\n          activateQue: this.state.activateQue + 1,\r\n        });\r\n        this.props.changeParentActivatedQue(this.state.activateQue + 1);\r\n      }\r\n    } else if (changeActivatedQue === \"previous__question\") {\r\n      if (this.state.activateQue > 0) {\r\n        this.setState({\r\n          activateQue: this.state.activateQue - 1,\r\n        });\r\n        this.props.changeParentActivatedQue(this.state.activateQue - 1);\r\n      }\r\n    } else if (changeActivatedQue === \"flag__question\") {\r\n    } else if (changeActivatedQue === \"end__test\") {\r\n    } else {\r\n      this.setState({\r\n        activateQue: changeActivatedQue,\r\n      });\r\n    }\r\n  };\r\n  componentWillUnmount() {\r\n    this.props.onRef(undefined);\r\n  }\r\n  submitTest = () => {\r\n    const {\r\n      userAnswers,\r\n      answers,\r\n      testName,\r\n      testID,\r\n      profileID,\r\n      firstName,\r\n      lastName,\r\n    } = this.props;\r\n    let correct = 0,\r\n      wrong = 0,\r\n      unanswered = 0,\r\n      totalMarks = answers.length,\r\n      dataToSubmit;\r\n\r\n    userAnswers.map((element, index) => {\r\n      if (element === undefined) {\r\n        unanswered = unanswered + 1;\r\n      } else if (element !== answers[index]) {\r\n        wrong = wrong + 1;\r\n      } else {\r\n        correct = correct + 1;\r\n      }\r\n      dataToSubmit = {\r\n        testID,\r\n        correct,\r\n        unanswered,\r\n        totalMarks,\r\n        profileID,\r\n        testName,\r\n        firstName,\r\n        lastName,\r\n        wrong,\r\n      };\r\n    });\r\n    this.props.submitTest(dataToSubmit);\r\n    this.props.signOut();\r\n    return;\r\n  };\r\n  render() {\r\n    const radioStyle = {\r\n      display: \"block\",\r\n      height: \"30px\",\r\n      lineHeight: \"30px\",\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <div className=\"descripiton__wrapper\">\r\n          <div className=\"question__no\">\r\n            Question {this.state.activateQue + 1} out of {this.state.questionsData.length}\r\n          </div>\r\n          {this.state.questionsData &&\r\n            this.state.questionsData.map((question, index) => {\r\n              if (this.state.activateQue === index) {\r\n                return (\r\n                  <div className=\"description__box\" key={index}>\r\n                    <div className=\"descripiton\"> {question.description}</div>\r\n                    <div className=\"options\">\r\n                      <Radio.Group\r\n                        onChange={(e) => this.onChange(e, index)}\r\n                        value={this.state.selectedAnswers[index]}\r\n                      >\r\n                        <Radio style={radioStyle} value={1}>\r\n                          {question.options[0].option}\r\n                        </Radio>\r\n                        <Radio style={radioStyle} value={2}>\r\n                          {question.options[1].option}\r\n                        </Radio>\r\n                        <Radio style={radioStyle} value={3}>\r\n                          {question.options[2].option}\r\n                        </Radio>\r\n                        <Radio style={radioStyle} value={4}>\r\n                          {question.options[3].option}\r\n                        </Radio>\r\n                      </Radio.Group>\r\n                      <div\r\n                        className=\"clear__response\"\r\n                        onClick={() => this.handleClearResponse(index)}\r\n                      >\r\n                        {<CloseOutlined />} Clear Response\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedTest: state.selectedTest.selectedTestData,\r\n    profileID: state.auth.user ? state.auth.profileID : null,\r\n    firstName: state.auth.user.firstName,\r\n    lastName: state.auth.user.lastName,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    submitTest: (data) => dispatch(submitTest(data)),\r\n    signOut: () => dispatch(logoutUser()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RightSide);\r\n"]},"metadata":{},"sourceType":"module"}