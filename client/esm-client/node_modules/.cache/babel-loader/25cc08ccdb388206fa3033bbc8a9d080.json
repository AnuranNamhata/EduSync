{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final year project\\\\project_repo\\\\EduSync\\\\client\\\\esm-client\\\\src\\\\dashboard\\\\ResultCard.js\";\nimport React, { useEffect } from \"react\";\nimport \"./TestCard.css\";\nimport { HiOutlineClipboardList, HiClipboardCopy } from \"react-icons/hi\";\nimport { fetchAttemptTests } from \"../actions/testActions\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Skeleton } from \"antd\";\nfunction ResultCard(props) {\n  let {\n    tests,\n    isLoading,\n    profileID,\n    trimLength\n  } = props;\n  if (tests) tests = tests.length > trimLength ? tests.slice(-trimLength).reverse() : tests;\n  useEffect(() => {\n    props.fetchTests(profileID);\n    console.log(\"fired\");\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"left__header__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HiOutlineClipboardList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }\n  }), \"Recently Attempted Tests\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, !isLoading && tests ? /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"left__body__list__ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, tests.map((test, index) => /*#__PURE__*/React.createElement(Link, {\n    to: \"/result\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"left__body__test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test__index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"index__box \",\n    style: {\n      backgroundColor: \"#1e90ff\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, index + 1)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test__name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }\n  }, \" \", test.testName), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test__icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(HiClipboardCopy, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  })))))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"skeleton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, Array(trimLength).fill().map((item, i) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"single-skeleton\",\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Skeleton.Avatar, {\n    className: \"avatar-skelton\",\n    active: true,\n    size: \"default\",\n    shape: \"square\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Skeleton.Input, {\n    className: \"input-skelton\",\n    active: true,\n    size: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  }))))));\n}\nconst mapStateToProps = state => {\n  return {\n    isLoading: state.tests.isLoadingAttemptedTest,\n    tests: state.tests.attemptedTest,\n    profileID: state.auth.profileID\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTests: profileID => dispatch(fetchAttemptTests(profileID))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultCard);","map":{"version":3,"names":["React","useEffect","HiOutlineClipboardList","HiClipboardCopy","fetchAttemptTests","connect","Link","Skeleton","ResultCard","props","tests","isLoading","profileID","trimLength","length","slice","reverse","fetchTests","console","log","createElement","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","test","index","to","key","style","backgroundColor","testName","Array","fill","item","i","Avatar","active","size","shape","Input","mapStateToProps","state","isLoadingAttemptedTest","attemptedTest","auth","mapDispatchToProps","dispatch"],"sources":["D:/Final year project/project_repo/EduSync/client/esm-client/src/dashboard/ResultCard.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./TestCard.css\";\r\nimport { HiOutlineClipboardList, HiClipboardCopy } from \"react-icons/hi\";\r\nimport { fetchAttemptTests } from \"../actions/testActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Skeleton } from \"antd\";\r\n\r\nfunction ResultCard(props) {\r\n  let { tests, isLoading, profileID, trimLength } = props;\r\n  if (tests)\r\n    tests =\r\n      tests.length > trimLength ? tests.slice(-trimLength).reverse() : tests;\r\n\r\n  useEffect(() => {\r\n    props.fetchTests(profileID);\r\n    console.log(\"fired\");\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"left__header\">\r\n        <p className=\"left__header__text\">\r\n          {<HiOutlineClipboardList />}Recently Attempted Tests\r\n        </p>\r\n      </div>\r\n      <div className=\"left__body\">\r\n        {!isLoading && tests ? (\r\n          <ul className=\"left__body__list__ul\">\r\n            {tests.map((test, index) => (\r\n              <Link to=\"/result\" key={index}>\r\n                <li className=\"left__body__test\">\r\n                  <div className=\"test__index\">\r\n                    <p\r\n                      className=\"index__box \"\r\n                      style={{ backgroundColor: \"#1e90ff\" }}\r\n                    >\r\n                      {index + 1}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"test__name\"> {test.testName}</div>\r\n                  <div className=\"test__icon\">\r\n                    <HiClipboardCopy />\r\n                  </div>\r\n                </li>\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <div className=\"skeleton\">\r\n            {Array(trimLength)\r\n              .fill()\r\n              .map((item, i) => (\r\n                <div className=\"single-skeleton\" key={i}>\r\n                  <Skeleton.Avatar\r\n                    className=\"avatar-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                    shape=\"square\"\r\n                  />\r\n                  <Skeleton.Input\r\n                    className=\"input-skelton\"\r\n                    active={true}\r\n                    size=\"default\"\r\n                  />\r\n                </div>\r\n              ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoading: state.tests.isLoadingAttemptedTest,\r\n    tests: state.tests.attemptedTest,\r\n    profileID: state.auth.profileID,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTests: (profileID) => dispatch(fetchAttemptTests(profileID)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultCard);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}