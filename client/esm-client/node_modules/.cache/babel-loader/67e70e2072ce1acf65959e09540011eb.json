{"ast":null,"code":"import { logoutUser } from \"./authActions\";\nexport const UPDATE_ATTEMPT_TEST_REQUEST = \"UPDATE_ATTEMPT_TEST_REQUEST\";\nexport const UPDATE_ATTEMPT_TEST_SUCCESS = \"UPDATE_ATTEMPT_TEST_SUCCESS\";\nexport const UPDATE_ATTEMPT_TEST_FAILURE = \"UPDATE_ATTEMPT_TEST_FAILURE\";\nconst requestUpdateTimeSpent = () => {\n  return {\n    type: UPDATE_ATTEMPT_TEST_REQUEST\n  };\n};\nconst receiveUpdateTimeSpent = time => {\n  return {\n    type: UPDATE_ATTEMPT_TEST_SUCCESS,\n    time\n  };\n};\nconst updateTimeSpentError = () => {\n  return {\n    type: UPDATE_ATTEMPT_TEST_FAILURE\n  };\n};\nexport const updateTimeSpentByStudent = values => dispatch => {\n  dispatch(requestUpdateTimeSpent());\n  let {\n    profileID,\n    testName,\n    completed,\n    minutes: totalTime,\n    _id: testID,\n    updatingAttemptedMinutes\n  } = values;\n  updatingAttemptedMinutes = updatingAttemptedMinutes !== 0 ? updatingAttemptedMinutes : 0;\n  console.log(parseInt(updatingAttemptedMinutes));\n  let subtractTime = updatingAttemptedMinutes == 0 ? parseInt(totalTime) : parseInt(0);\n  let attemptedTime = Math.abs(subtractTime - parseInt(updatingAttemptedMinutes - 1));\n  const data = {\n    profileID,\n    testName,\n    completed,\n    attemptedTime,\n    totalTime\n  };\n  console.log(completed, totalTime, data.attemptedTime);\n  const requestOptions = {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: localStorage.getItem(\"token\")\n    },\n    body: JSON.stringify(data)\n  };\n  fetch(`/student/update-test-status/${testID}`, requestOptions).then(response => response.json()).then(data => {\n    if (data) {\n      var _data$error;\n      if ((data === null || data === void 0 ? void 0 : (_data$error = data.error) === null || _data$error === void 0 ? void 0 : _data$error.name) === \"TokenExpiredError\") {\n        dispatch(logoutUser());\n      } else {\n        data.obj.testStatus.map((test, index) => {\n          if (test.testID === testID) {\n            localStorage.setItem(testID, test.attemptedTime);\n          }\n        });\n        console.log(data.obj);\n        dispatch(receiveUpdateTimeSpent(localStorage.getItem(testID)));\n      }\n    }\n  }).catch(error => {\n    //Do something with the error if you want!\n    console.log(error);\n    dispatch(updateTimeSpentError());\n  });\n};","map":{"version":3,"names":["logoutUser","UPDATE_ATTEMPT_TEST_REQUEST","UPDATE_ATTEMPT_TEST_SUCCESS","UPDATE_ATTEMPT_TEST_FAILURE","requestUpdateTimeSpent","type","receiveUpdateTimeSpent","time","updateTimeSpentError","updateTimeSpentByStudent","values","dispatch","profileID","testName","completed","minutes","totalTime","_id","testID","updatingAttemptedMinutes","console","log","parseInt","subtractTime","attemptedTime","Math","abs","data","requestOptions","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","fetch","then","response","json","_data$error","error","name","obj","testStatus","map","test","index","setItem","catch"],"sources":["D:/Final year project/project_repo/EduSync/client/esm-client/src/actions/attemptTestActions.js"],"sourcesContent":["import { logoutUser } from \"./authActions\";\r\nexport const UPDATE_ATTEMPT_TEST_REQUEST = \"UPDATE_ATTEMPT_TEST_REQUEST\";\r\nexport const UPDATE_ATTEMPT_TEST_SUCCESS = \"UPDATE_ATTEMPT_TEST_SUCCESS\";\r\nexport const UPDATE_ATTEMPT_TEST_FAILURE = \"UPDATE_ATTEMPT_TEST_FAILURE\";\r\n\r\nconst requestUpdateTimeSpent = () => {\r\n  return {\r\n    type: UPDATE_ATTEMPT_TEST_REQUEST,\r\n  };\r\n};\r\n\r\nconst receiveUpdateTimeSpent = (time) => {\r\n  return {\r\n    type: UPDATE_ATTEMPT_TEST_SUCCESS,\r\n    time,\r\n  };\r\n};\r\n\r\nconst updateTimeSpentError = () => {\r\n  return {\r\n    type: UPDATE_ATTEMPT_TEST_FAILURE,\r\n  };\r\n};\r\n\r\nexport const updateTimeSpentByStudent = (values) => (dispatch) => {\r\n  dispatch(requestUpdateTimeSpent());\r\n  let {\r\n    profileID,\r\n    testName,\r\n    completed,\r\n    minutes: totalTime,\r\n    _id: testID,\r\n    updatingAttemptedMinutes,\r\n  } = values;\r\n\r\n  updatingAttemptedMinutes =\r\n    updatingAttemptedMinutes !== 0 ? updatingAttemptedMinutes : 0;\r\n  console.log(parseInt(updatingAttemptedMinutes));\r\n  let subtractTime =\r\n    updatingAttemptedMinutes == 0 ? parseInt(totalTime) : parseInt(0);\r\n\r\n  let attemptedTime = Math.abs(\r\n    subtractTime - parseInt(updatingAttemptedMinutes - 1)\r\n  );\r\n\r\n  const data = { profileID, testName, completed, attemptedTime, totalTime };\r\n  console.log(completed, totalTime, data.attemptedTime);\r\n\r\n  const requestOptions = {\r\n    method: \"PUT\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: localStorage.getItem(\"token\"),\r\n    },\r\n\r\n    body: JSON.stringify(data),\r\n  };\r\n\r\n  fetch(`/student/update-test-status/${testID}`, requestOptions)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data) {\r\n        if (data?.error?.name === \"TokenExpiredError\") {\r\n          dispatch(logoutUser());\r\n        } else {\r\n          data.obj.testStatus.map((test, index) => {\r\n            if (test.testID === testID) {\r\n              localStorage.setItem(testID, test.attemptedTime);\r\n            }\r\n          });\r\n\r\n          console.log(data.obj);\r\n          dispatch(receiveUpdateTimeSpent(localStorage.getItem(testID)));\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      //Do something with the error if you want!\r\n      console.log(error);\r\n      dispatch(updateTimeSpentError());\r\n    });\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}